// FOS Common

class FuelCellController : Item::ItemDescriptor
{
	FuelCellController( ::ItemMutual@ item, uint16 pid )
	{
		super( @item, pid );
	}
	
	Mk2::Descriptor@ Copy( ::ItemMutual@ item ) override
	{
		return @ThisModule::FuelCellController( @item, Pid );
	}

	::string@ get_Name( ) override
	{
		return "FuelCellController_" + StringId();
	}
	
#ifdef __SERVER
	bool GetData( UpgradeItem::Data& data, int trigger ) override
	{
		if( trigger == UpgradeItem::Triggered::LineDamage )
		{
			UpgradeItem::LineDamageData@ lineData = cast< UpgradeItem::LineDamageData@ >( @data );
			if( @lineData !is null )
			{
				lineData.Effect = Content::Item::FIRE_LASER_EXPLOSION;
				lineData.IsFire = true;
				lineData.DamageMod *= RealIt.Proto.Upgrade_EffectValue1;
			}
			else Log( "Error upgrade data" );
			return true;
		}
		return Item::ItemDescriptor::GetData( data, trigger );
	}
#endif

}

void ModuleInit()
{
	Item::Defaults.set( "" + Content::Item::CAR_FUEL_CELL_CONTROLLER, @ThisModule::FuelCellController( null, Content::Item::CAR_FUEL_CELL_CONTROLLER ) );
}

