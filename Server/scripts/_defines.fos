#ifndef __DEFINES__
#define __DEFINES__

#define __NO_FAVORIT_ITEMS
//Ёмблемы
#define	EMBLEM_PURG_TEAM_1	(::GetStrHash("art\\intrface\\purg_team1.png"))
#define	EMBLEM_PURG_TEAM_2	(::GetStrHash("art\\intrface\\purg_team2.png"))
#define	EMBLEM_PURG_TEAM_3	(::GetStrHash("art\\intrface\\purg_team3.png"))
#define	EMBLEM_PURG_TEAM_4	(::GetStrHash("art\\intrface\\purg_team4.png"))

#define FIRST_NPC_ID		( 5000000 ) // ѕервый айди нпц.

// Say types
#define SAY_NORM                    (1)
#define SAY_NORM_ON_HEAD            (2)
#define SAY_SHOUT                   (3)
#define SAY_SHOUT_ON_HEAD           (4)
#define SAY_EMOTE                   (5)
#define SAY_EMOTE_ON_HEAD           (6)
#define SAY_WHISP                   (7)
#define SAY_WHISP_ON_HEAD           (8)
#define SAY_SOCIAL                  (9)
#define SAY_RADIO                   (10)
#define SAY_NETMSG                  (11)
#define SAY_DIALOG                  (12)
#define SAY_APPEND                  (13)
#define SAY_ENCOUNTER_ANY           (14) // Activate dialog box on global map, using before encounter
#define SAY_ENCOUNTER_RT            (15) // Activate dialog box on global map, using before encounter
#define SAY_ENCOUNTER_TB            (16) // Activate dialog box on global map, using before encounter
#define SAY_FIX_RESULT              (17)
#define SAY_DIALOGBOX_TEXT          (18)
#define SAY_DIALOGBOX_BUTTON #(b)   (19+(b)) // Max 20 buttons (0..19)
#define SAY_SAY_TITLE               (39)
#define SAY_SAY_TEXT                (40)
#define SAY_FLASH_WINDOW            (41) // Only flash window in tray and beep

#define SAY_SERVER		            (42)
 
#define SAY_DIALOG_BEGIN          	(SAY_DIALOG_BRANCH) 
#define SAY_DIALOG_BRANCH          	(43) 
#define SAY_DIALOG_ANSWER           (44) 
#define SAY_DIALOG_SHOW             (45) 
#define SAY_DIALOG_LEXEM            (46) 
#define SAY_DIALOG_HIDE             (47) 
#define SAY_DIALOG_END	            (SAY_DIALOG_HIDE) 

#define SAY_INFORMER	            (60) 

// Msg nums
#define TEXTMSG_TEXT                (0)
#define TEXTMSG_DLG                 (1)
#define TEXTMSG_ITEM                (2)
#define TEXTMSG_GAME                (3)
#define TEXTMSG_GM                  (4)
#define TEXTMSG_COMBAT              (5)
#define TEXTMSG_QUEST               (6)
#define TEXTMSG_HOLO                (7)
#define TEXTMSG_CRAFT               (8)
#define TEXTMSG_INTERNAL            (9)
#define DLGSTR #(dialogId,strNum)   (1000000000+(dialogId)*100000+(strNum))

// Critter conditions
#define COND_LIFE                   (1)
#define COND_KNOCKOUT               (2)
#define COND_DEAD                   (3)

// Gender
#define GENDER_MALE                 (0)
#define GENDER_FEMALE               (1)
#define GENDER_IT                   (2)

// Items accessory
#define ACCESSORY_NONE              (0)
#define ACCESSORY_CRITTER           (1)
#define ACCESSORY_HEX               (2)
#define ACCESSORY_CONTAINER         (3)
#define ACCESSORY_ERASE		        (45)
#define ACCESSORY_CRITTER_DROP_ITEM (208)

// Items types
	// Internal types
#define ITEM_TYPE_NONE              (0)
#define ITEM_TYPE_ARMOR             (1)
#define ITEM_TYPE_DRUG              (2)
#define ITEM_TYPE_WEAPON            (3)
#define ITEM_TYPE_AMMO              (4)
#define ITEM_TYPE_MISC              (5)
#define ITEM_TYPE_MISC2             (6)
#define ITEM_TYPE_KEY               (7)
#define ITEM_TYPE_CONTAINER         (8)
#define ITEM_TYPE_DOOR              (9)
#define ITEM_TYPE_GRID              (10)
#define ITEM_TYPE_GENERIC           (11)
#define ITEM_TYPE_WALL              (12)
#define ITEM_TYPE_CAR               (13)
#define ITEM_MAX_TYPES				(14)
#define ITEM_TYPE_ANIMAL            (14)

// Item flags
#define ITEM_HIDDEN                 (0x00000001)
#define ITEM_FLAT                   (0x00000002)
#define ITEM_NO_BLOCK               (0x00000004)
#define ITEM_SHOOT_THRU             (0x00000008)
#define ITEM_LIGHT_THRU             (0x00000010)
#define ITEM_MULTI_HEX              (0x00000020) // Not used
#define ITEM_WALL_TRANS_END         (0x00000040) // Not used
#define ITEM_TWO_HANDS              (0x00000080)
#define ITEM_BIG_GUN                (0x00000100)
#define ITEM_ALWAYS_VIEW            (0x00000200)
#define ITEM_HAS_TIMER              (0x00000400)
#define ITEM_BAD_ITEM               (0x00000800)
#define ITEM_NO_HIGHLIGHT           (0x00001000)
#define ITEM_SHOW_ANIM              (0x00002000)
#define ITEM_SHOW_ANIM_EXT          (0x00004000)
#define ITEM_LIGHT                  (0x00008000)
#define ITEM_GECK                   (0x00010000)
#define ITEM_TRAP                   (0x00020000)
#define ITEM_NO_LIGHT_INFLUENCE     (0x00040000)
#define ITEM_NO_LOOT                (0x00080000)
#define ITEM_NO_STEAL               (0x00100000)
#define ITEM_GAG                    (0x00200000)
#define ITEM_COLORIZE               (0x00400000)
#define ITEM_COLORIZE_INV           (0x00800000)
#define ITEM_CAN_USE_ON_SMTH        (0x01000000)
#define ITEM_CAN_LOOK               (0x02000000)
#define ITEM_CAN_TALK               (0x04000000)
#define ITEM_CAN_PICKUP             (0x08000000)
#define ITEM_CAN_USE                (0x10000000)
#define ITEM_HOLODISK               (0x20000000)
#define ITEM_RADIO                  (0x40000000)
#define ITEM_CACHED                 (0x80000000) // Not used

// Damage types
#define DAMAGE_UNCALLED             (0)
#define DAMAGE_NORMAL               (1)
#define DAMAGE_LASER                (2)
#define DAMAGE_FIRE                 (3)
#define DAMAGE_PLASMA               (4)
#define DAMAGE_ELECTR               (5)
#define DAMAGE_EMP                  (6)
#define DAMAGE_EXPLODE              (7)
#define DAMAGE_TYPE_COUNT	        (8) // Used in native

// Critter events, description see in templates.fos
#define CRITTER_EVENT_IDLE                    (0)
#define CRITTER_EVENT_FINISH                  (1)
#define CRITTER_EVENT_DEAD                    (2)
#define CRITTER_EVENT_RESPAWN                 (3)
#define CRITTER_EVENT_SHOW_CRITTER            (4)
#define CRITTER_EVENT_SHOW_CRITTER_1          (5)
#define CRITTER_EVENT_SHOW_CRITTER_2          (6)
#define CRITTER_EVENT_HIDE_CRITTER            (8)
#define CRITTER_EVENT_HIDE_CRITTER_1          (9)
#define CRITTER_EVENT_HIDE_CRITTER_2          (10)
#define CRITTER_EVENT_SHOW_ITEM_ON_MAP        (12)
#define CRITTER_EVENT_CHANGE_ITEM_ON_MAP      (13)
#define CRITTER_EVENT_HIDE_ITEM_ON_MAP        (14)
#define CRITTER_EVENT_ATTACK                  (15)
#define CRITTER_EVENT_ATTACKED                (16)
#define CRITTER_EVENT_STEALING                (17)
#define CRITTER_EVENT_MESSAGE                 (18)
#define CRITTER_EVENT_USE_ITEM                (19)
#define CRITTER_EVENT_USE_ITEM_ON_ME          (20)
#define CRITTER_EVENT_USE_SKILL               (21)
#define CRITTER_EVENT_USE_SKILL_ON_ME         (22)
#define CRITTER_EVENT_DROP_ITEM               (23)
#define CRITTER_EVENT_MOVE_ITEM               (24)
#define CRITTER_EVENT_KNOCKOUT                (25)
#define CRITTER_EVENT_SMTH_DEAD               (26)
#define CRITTER_EVENT_SMTH_STEALING           (27)
#define CRITTER_EVENT_SMTH_ATTACK             (28)
#define CRITTER_EVENT_SMTH_ATTACKED           (29)
#define CRITTER_EVENT_SMTH_USE_ITEM           (30)
#define CRITTER_EVENT_SMTH_USE_SKILL          (31)
#define CRITTER_EVENT_SMTH_DROP_ITEM          (32)
#define CRITTER_EVENT_SMTH_MOVE_ITEM          (33)
#define CRITTER_EVENT_SMTH_KNOCKOUT           (34)
#define CRITTER_EVENT_PLANE_BEGIN             (35)
#define CRITTER_EVENT_PLANE_END               (36)
#define CRITTER_EVENT_PLANE_RUN               (37)
#define CRITTER_EVENT_BARTER                  (38)
#define CRITTER_EVENT_TALK                    (39)
#define CRITTER_EVENT_GLOBAL_PROCESS          (40)
#define CRITTER_EVENT_GLOBAL_INVITE           (41)
#define CRITTER_EVENT_TURN_BASED_PROCESS      (42)
#define CRITTER_EVENT_SMTH_TURN_BASED_PROCESS (43)
#define CRITTER_EVENT_MAX                     (44)

// Return values for CRITTER_EVENT_PLANE_ BEGIN/END/RUN events
#define PLANE_RUN_GLOBAL                      (0)
#define PLANE_KEEP                            (1)
#define PLANE_DISCARD                         (2)

// Map events, description see in templates.fos
#define MAP_EVENT_FINISH              (0)
#define MAP_EVENT_LOOP_0              (1)
#define MAP_EVENT_LOOP_1              (2)
#define MAP_EVENT_LOOP_2              (3)
#define MAP_EVENT_LOOP_3              (4)
#define MAP_EVENT_LOOP_4              (5)
#define MAP_EVENT_IN_CRITTER          (6)
#define MAP_EVENT_OUT_CRITTER         (7)
#define MAP_EVENT_CRITTER_DEAD        (8)
#define MAP_EVENT_TURN_BASED_BEGIN    (9)
#define MAP_EVENT_TURN_BASED_END      (10)
#define MAP_EVENT_TURN_BASED_PROCESS  (11)
#define MAP_EVENT_MAX                 (12)

// Item events, description see in templates.fos
#define ITEM_EVENT_FINISH             (0)
#define ITEM_EVENT_ATTACK             (1)
#define ITEM_EVENT_USE                (2)
#define ITEM_EVENT_USE_ON_ME          (3)
#define ITEM_EVENT_SKILL              (4)
#define ITEM_EVENT_DROP               (5)
#define ITEM_EVENT_MOVE               (6)
#define ITEM_EVENT_WALK               (7)
#define ITEM_EVENT_MAX                (8)

// Item perks
#define WEAPON_PERK_LONG_RANGE        		(1)
//	2 ой перк свободен
#define WEAPON_PERK_PENETRATE         		(3)
#define WEAPON_PERK_KNOCKBACK         		(4)
#define WEAPON_PERK_SCOPE_RANGE       		(5)
#define WEAPON_PERK_FAST_RELOAD       		(6)
#define WEAPON_PERK_NIGHT_SIGHT       		(7)
#define WEAPON_PERK_FLAMEBOY          		(8)
#define WEAPON_PERK_SHOTGUN			 		(10)
#define WEAPON_PERK_SOUNDLESS				(11)
#define WEAPON_PERK_HEX_ATTACKING	  		(12)
#define WEAPON_PERK_TOXIC        	  		(13)
// 14ый перк свободен
#define WEAPON_PERK_ELECTRIC_SHOCK		    (15)
#define WEAPON_PERK_BETTER_CRITICALS        (16)
#define WEAPON_PERK_LIGHTNING_WEAPON		(17)
#define WEAPON_PERK_PLASMA_CANNON			(18)
#define WEAPON_PERK_DOUBLE_SHOT				(19)

// Armor perks
#define ARMOR_PERK_POWERED            (1) // +3 strength, +30 radiation resist
#define ARMOR_PERK_COMBAT             (2) // +20 radiation resist
#define ARMOR_PERK_ADVANCED_I         (3) // +4 strength, +60 radiation resist
#define ARMOR_PERK_ADVANCED_II        (4) // +4 strength, +75 radiation resist
#define ARMOR_PERK_CHARISMA           (5) // 1+ charisma
#define ARMOR_PERK_COMBAT_II          (6) // +20 radiation resist, +25 anticritical chance
#define ARMOR_PERK_COMBAT_BROTHERHOOD (7) // +20 radiation resist, +30 anticritical chance
#define ARMOR_PERK_POWERED_II         (8) // +3 strength, +30 radiation resist, +55 anticritical chance
#define ARMOR_PERK_SENTRY_BOTS        (9) // 
#define ARMOR_PERK_TESLA	          (10) //

// Other perks
#define SLOT_PERK_MIRROR_SHADES       (0x01) // +1 charisma
#define SLOT_PERK_COSMETIC_CASE       (0x02) // +1 charisma to female
#define SLOT_PERK_MOTION_SENSOR       (0x04) // +20 outdoorsman
#define SLOT_PERK_STEALTH_BOY         (0x08) // +20 sneak

// In SendMessage
#define MESSAGE_TO_WHO_SEES_ME      (0) // ќтослать сообщени€ всем кто видет криттера.
#define MESSAGE_TO_I_SEE            (1) // ќтослать сообщени€ всем кого видит криттер.
#define MESSAGE_TO_ALL_ON_MAP       (2) // ќтослать всем на карте.

// Critter actions
// Flags for chosen:
// l - hardcoded local call
// s - hardcoded server call
// for all others critters actions call only server
//                                          flags    actionExt                                                      item
#define ACTION_MOVE                 (0)  // l
#define ACTION_RUN                  (1)  // l
#define ACTION_MOVE_ITEM            (2)  // l s      from slot                                                      +
#define ACTION_MOVE_ITEM_SWAP       (3)  // l s      from slot                                                      +
#define ACTION_USE_ITEM             (4)  // l s                                                                     +
#define ACTION_DROP_ITEM            (5)  // l s      from slot                                                      +
#define ACTION_USE_WEAPON           (6)  // l        fail attack 8 bit, use index (0-2) 4-7 bits, aim 0-3 bits      +
#define ACTION_RELOAD_WEAPON        (7)  // l s                                                                     +
#define ACTION_USE_SKILL            (8)  // l s      skill index (see SK_*)
#define ACTION_PICK_ITEM            (9)  // l s                                                                     +
#define ACTION_PICK_CRITTER         (10) // l        0 - loot, 1 - steal, 2 - push
#define ACTION_OPERATE_CONTAINER    (11) // l s      transfer type * 10 + [0 - get, 1 - get all, 2 - put]           + (exclude get all)
#define ACTION_BARTER               (12) //   s      0 - item taken, 1 - item given                                 +
#define ACTION_DODGE                (13) //          0 - front, 1 - back
#define ACTION_DAMAGE               (14) //          0 - front, 1 - back
#define ACTION_DAMAGE_FORCE			(15) //          0 - front, 1 - back
#define ACTION_KNOCKOUT             (16) //   s      0 - knockout anim2begin
#define ACTION_STANDUP              (17) //   s      0 - knockout anim2end
#define ACTION_FIDGET               (18) // l
#define ACTION_DEAD                 (19) //   s      dead type anim2 (see Anim2 in _animation.fos)
#define ACTION_CONNECT              (20) //
#define ACTION_DISCONNECT           (21) //
#define ACTION_RESPAWN              (22) //   s
#define ACTION_REFRESH              (23) //   s

// Slots
#define SLOT_INV                    (0) // Inventory
#define SLOT_HAND1                  (1) // Weapon slot
#define SLOT_HAND2                  (2) // Extended slot
#define SLOT_ARMOR                  (3) // Armor slot

#define SLOT_BONUS					(5) // —лот дл€ гранат.

#define SLOT_GROUND                 (255) // Ground slot, used when critter drop/pick item

// Critter timeevents identifiers
#define CTE_CUSTOM                  (0)
#define CTE_POISON                  (1)
#define CTE_RADIATION               (2)
#define CTE_TRADER                  (3)
#define CTE_OBSERVING               (4)
#define CTE_AUTOKILL                (5)
#define CTE_MESSAGE_DELAY           (6)
#define CTE_TRACK                   (7)
#define CTE_HEALING					(8)
#define CTE_RECOVERY				(9)
#define CTE_WALK_RANDOM				(10)
#define CTE_WALK_TO_CRITTER			(12)
#define CTE_BLOCK_DOOR  			(13)
#define CTE_CAR_LOCKPICK  			(14)
#define CTE_STEAM_DAMAGE            (15)
#define CTE_END_BATTLE  			(16)
#define CTE_ARMOR_GADGET  			(17)
#define CTE_FARMLOC  				(18)
#define CTE_TEAM_NOTIFICATION_GM	(19)
#define CTE_TEAM_NOTIFICATION		(20)
#define CTE_REFRESH_SPEED			(21)
#define CTE_FIRE					(22)
#define CTE_MOVE					(23)
#define CTE_GO_SNEAK			(24)
#define CTE_CLEAR_VARS      	( 25 ) // —обытие очистки переменных.
#define CTE_CONFIRM_SAVE    	( 26 )
#define CTE_ZOMBIE_RESPAWN	(27)
#define CTE_ATOLL_REFRESH    ( 28 )
#define CTE_DRUG           ( 40 )
#define CTE_HEALSELF     ( 41 )

#define CTE_RUN_START_EVENT                ( 223 )
#define CTE_COMMENT                        ( 224 )
#define CTE_OPENNING                       ( 225 )
// Drugs time events                40 (Content::Item::STIMPAK) .. 1000
 
// effect instructions
#define EFFECT_INSTRUCTION_NONE				(0)
#define EFFECT_INSTRUCTION_POST_EXPLODE	(1)
 
// Parameters
	/// Stats
#define STAT_BEGIN                 (0)
#define STAT_END                   (199)
#define STAT_COUNT                 (STAT_END-STAT_BEGIN+1)
#define STAT_EXT_BEGIN             (33)
#define STAT_EXT_END               (65)
#define ST_STRENGTH                 (0) // Hardcoded
#define ST_PERCEPTION               (1) // Hardcoded
#define ST_ENDURANCE                (2) // Hardcoded
#define ST_CHARISMA                 (3) // Hardcoded
#define ST_INTELLECT                (4) // Hardcoded
#define ST_AGILITY                  (5) // Hardcoded
#define ST_LUCK                     (6) // Hardcoded
#define ST_MAX_LIFE                 (7) // Hardcoded
#define ST_ACTION_POINTS            (8) // Hardcoded
#define ST_ARMOR_CLASS              (9) // Hardcoded
#define ST_MELEE_DAMAGE             (10) // Hardcoded
#define ST_CARRY_WEIGHT             (11) // Hardcoded
#define ST_SEQUENCE                 (12) // Hardcoded
#define ST_HEALING_RATE             (13) // Hardcoded
#define ST_CRITICAL_CHANCE          (14) // Hardcoded
#define ST_MAX_CRITICAL             (15)
#define ST_NORMAL_ABSORB            (16)
#define ST_LASER_ABSORB             (17)
#define ST_FIRE_ABSORB              (18)
#define ST_PLASMA_ABSORB            (19)
#define ST_ELECTRO_ABSORB           (20)
#define ST_EMP_ABSORB               (21)
#define ST_EXPLODE_ABSORB           (22)
#define ST_NORMAL_RESIST            (23) // Hardcoded
#define ST_LASER_RESIST             (24)
#define ST_FIRE_RESIST              (25)
#define ST_PLASMA_RESIST            (26)
#define ST_ELECTRO_RESIST           (27)
#define ST_EMP_RESIST               (28)
#define ST_EXPLODE_RESIST           (29)
#define ST_RADIATION_RESISTANCE     (30) // Hardcoded
#define ST_POISON_RESISTANCE        (31) // Hardcoded
#define ST_COUNT_DRUGS              (32)
#define ST_STRENGTH_EXT             (33)
#define ST_PERCEPTION_EXT           (34)
#define ST_ENDURANCE_EXT            (35)
#define ST_CHARISMA_EXT             (36)
#define ST_INTELLECT_EXT            (37)
#define ST_AGILITY_EXT              (38)
#define ST_LUCK_EXT                 (39)
#define ST_MAX_LIFE_EXT             (40)
#define ST_ACTION_POINTS_EXT        (41)
#define ST_ARMOR_CLASS_EXT          (42)
#define ST_MELEE_DAMAGE_EXT         (43)
#define ST_CARRY_WEIGHT_EXT         (44)
#define ST_SEQUENCE_EXT             (45)
#define ST_HEALING_RATE_EXT         (46)
#define ST_CRITICAL_CHANCE_EXT      (47)
#define ST_MAX_CRITICAL_EXT         (48)
#define ST_NORMAL_ABSORB_EXT        (49)
#define ST_LASER_ABSORB_EXT         (50)
#define ST_FIRE_ABSORB_EXT          (51)
#define ST_PLASMA_ABSORB_EXT        (52)
#define ST_ELECTRO_ABSORB_EXT       (53)
#define ST_EMP_ABSORB_EXT           (54)
#define ST_EXPLODE_ABSORB_EXT       (55)
#define ST_NORMAL_RESIST_EXT        (56)
#define ST_LASER_RESIST_EXT         (57)
#define ST_FIRE_RESIST_EXT          (58)
#define ST_PLASMA_RESIST_EXT        (59)
#define ST_ELECTRO_RESIST_EXT       (60)
#define ST_EMP_RESIST_EXT           (61)
#define ST_EXPLODE_RESIST_EXT       (62)
#define ST_RADIATION_RESISTANCE_EXT (63)
#define ST_POISON_RESISTANCE_EXT    (64)
#define ST_COUNT_DRUGS_EXT          (65)
#define ST_KILL_EXPERIENCE          (66)
#define ST_BODY_TYPE                (67)
#define ST_LOCOMOTION_TYPE          (68) // See Locomotion types
#define ST_DAMAGE_TYPE              (69)
#define ST_AGE                      (70) // Hardcoded
#define ST_GENDER                   (71) // Hardcoded
#define ST_CURRENT_HP               (72) // Hardcoded
#define ST_POISONING_LEVEL          (73) // Hardcoded
#define ST_RADIATION_LEVEL          (74) // Hardcoded
#define ST_CURRENT_AP               (75) // Hardcoded
#define ST_EXPERIENCE               (76) // Hardcoded
#define ST_LEVEL                    (77) // Hardcoded
#define ST_UNSPENT_SKILL_POINTS     (78) // Hardcoded
#define ST_UNSPENT_PERKS            (79) // Hardcoded
#define ST_KARMA                    (80) // Hardcoded
#define ST_FOLLOW_CRIT              (81) // Hardcoded
#define ST_REPLICATION_MONEY        (82) // Hardcoded
#define ST_REPLICATION_COUNT        (83) // Hardcoded
#define ST_REPLICATION_TIME         (84) // Hardcoded
#define ST_REPLICATION_COST         (85) // Hardcoded
#define ST_TURN_BASED_AC            (86) // Hardcoded
#define ST_MAX_MOVE_AP              (87) // Hardcoded
#define ST_MOVE_AP                  (88) // Hardcoded
#define ST_NPC_ROLE                 (89) // Hardcoded
#define ST_VAR0                     (90)
#define ST_VAR1                     (91)
#define ST_VAR2                     (92)
#define ST_VAR3                     (93)
#define ST_VAR4                     (94)
#define ST_VAR5                     (95)
#define ST_VAR6                     (96)
#define ST_VAR7                     (97)
#define ST_VAR8                     (98)
#define ST_VAR9                     (99)
#define ST_PLAYER_KARMA             (100)
#define ST_BONUS_LOOK               (101) // Hardcoded
#define ST_HANDS_ITEM_AND_MODE      (102) // Hardcoded
#define ST_FREE_BARTER_PLAYER       (103) // Hardcoded
#define ST_DIALOG_ID                (104) // Hardcoded
#define ST_AI_ID                    (105) // Hardcoded
#define ST_TEAM_ID                  (106) // Hardcoded
#define ST_BAG_ID                   (107) // Hardcoded
#define ST_LAST_STEAL_CR_ID         (108)
#define ST_STEAL_COUNT              (109)
#define ST_LAST_WEAPON_ID           (110) // Hardcoded
#define ST_LAST_WEAPON_USE          (111)
#define ST_BASE_CRTYPE              (112) // Hardcoded
#define ST_DEAD_BLOCKER_ID          (113)
#define ST_CURRENT_ARMOR_PERK       (114)
#define ST_TALK_DISTANCE            (115) // Hardcoded, if zero than taked __TalkDistance
#define ST_SCALE_FACTOR             (116) // Hardcoded
#define ST_WALK_TIME      			(117)	// Hardcoded
#define ST_RUN_TIME                 (118)	// Hardcoded
#define ST_MAX_TALKERS 				(119) // Hardcoded
#define ST_FR_LEADERSHIP            (120)
#define ST_FR_CLIPBOARD             (121)
#define ST_CRITICAL_RESISTANCE      (122)
#define ST_FACTION                 (123)
#define ST_THROWING_DAMAGE          (124)
#define ST_HEALING_LEVEL            (125)
#define ST_VISIBLE_DIST             (126)
#define ST_LAST_FACTION_QUIT       (127)
#define ST_DEAD_HIT_POINTS          (128)
#define ST_LAST_CRITTER_HEX         (129)	// »спользуетс€ только на клиенте.
#define ST_NEXT_CRTYPE              (130)	
#define ST_NEXT_REPLICATION_MAP 	(131)
#define ST_NEXT_REPLICATION_ENTIRE  (132)
#define ST_CURRENT_MAP_TIME         (133)
#define ST_TRADER_RATE		        (134)
#define ST_BONUS_WALK_TIME      	(135)
#define ST_BONUS_RUN_TIME           (136)
#define ST_HASH_EMBLEM	            (137)
#define ST_FIX_VERSION	            (138)
#define ST_LAST_CRAFT_TIME          (139)

#define FIX_MOVE_TIME				( 1 )
#define FIX_PENALTY 				( 2 )

// reserved for 5 layers 
#define ST_ROLE_CITY				(140) // Used to establish role of NPC in city 
#define ST_NPC_PATROL_ID			(141)
#define ST_NPC_PATROL_NUMBER		(142)

#define ST_NPC_ATTACK_PLAYER_ID		(143) // Npc атакует игрока через диалог, этот игрок может ответить тем-же

#define ST_SAYAS					(145) // ’ранит ID персонажа, за которого можно говорить в чат.
#define ST_ADMINGUI					(146) // јктивирует/деактивируит админские навороты на √”».
#define ST_IS_FARM_CRITTER			(147) // Ќпц из фармлокации? 0 - нет, иначе айди.
#define ST_TEAM_VAR					(148) // 
#define ST_BIG_CITY_PENALTY			(149) // 

// Initial values of animation 3d layers
#define ST_ANIM3D_LAYERS            (150) // Hardcoded
// 150..179 reserved for 30 layers
// 180..199

// 181-182 free

#define ST_COLOR	     (182)
#define ST_DESEASE       (183)
#define ST_DESEASE_STAGE (184)

#define ST_DEBUG_IM_TICK  			(185)
#define ST_DEBUG_IM_COUNT 			(186)
#define ST_DEBUG_IM_COUNT_WARNING 	(187)

#define ST_ARENA_POINTS             (188)
#define ST_RADIOQUEST_BONUSES       (189)

#define ST_NPC_NAME_RUSS 	(190)
#define ST_NPC_NAME_ENGL 	(191)
#define ST_NPC_NAME_UKRA 	(192)


#define ST_FIRE_DATA		(193) // √орение
#define ST_BATTLE_DATA		(194) // ƒанные дл€ статистики бо€
#define ST_DAMAGE_DONE		(195) // ”рон за бой
#define ST_DAMAGE_RECEIVED	(196) // ѕолученный урон за бой.

#define ST_DIALOG_RESULT	(197)

#define ST_TOXIC                    (198)
#define ST_RADIOACTIVE              (199)
/// Skills
#define SKILL_BEGIN                 (::__SkillBegin)
#define SKILL_END                   (::__SkillEnd)
#define SKILL_COUNT                 (SKILL_END-SKILL_BEGIN+1)
#define MAX_SKILL_VAL 				(::__SkillMaxValue)
#define SK_SMALL_GUNS               (200)
#define SK_BIG_GUNS                 (201)
#define SK_ENERGY_WEAPONS           (202)
#define SK_UNARMED                  (203) // Hardcoded
#define SK_LIONHEART            	(204)
#define SK_THROWING                 (205)
#define SK_FIRST_AID                (206) // Hardcoded
#define SK_DOCTOR                   (207) // Hardcoded
#define SK_SNEAK                    (208) // Hardcoded
#define SK_LOCKPICK                 (209) // Hardcoded
#define SK_STEAL                    (210) // Hardcoded
#define SK_TRAPS                    (211) // Hardcoded
#define SK_SCIENCE                  (212) // Hardcoded
#define SK_REPAIR                   (213) // Hardcoded
#define SK_SPEECH                   (214) // Hardcoded
#define SK_BARTER                   (215) // Hardcoded
#define SK_GAMBLING                 (216)
#define SK_OUTDOORSMAN              (217)
// 218..225

/// Tag skills
#define TAG_SKILL1                  (226) // Hardcoded
#define TAG_SKILL2                  (227) // Hardcoded
#define TAG_SKILL3                  (228) // Hardcoded
#define TAG_SKILL4                  (229) // Hardcoded

/// Timeouts
#define TIMEOUT_BEGIN               (::__TimeoutBegin)
#define TIMEOUT_END                 (::__TimeoutEnd)
#define TIMEOUT_COUNT               (TIMEOUT_END-TIMEOUT_BEGIN+1)
#define TO_SK_FIRST_AID             (230)
#define TO_SK_DOCTOR                (231)
#define TO_SK_REPAIR                (232) // Hardcoded
#define TO_SK_SCIENCE               (233) // Hardcoded
#define TO_SK_LOCKPICK              (234)
#define TO_SK_STEAL                 (235)
#define TO_SK_OUTDOORSMAN           (236)
// 237
#define TO_BATTLE                   (238) // Hardcoded
#define TO_TRANSFER                 (239) // Hardcoded
#define TO_REMOVE_FROM_GAME         (240) // Hardcoded
#define TO_REPLICATION              (241)
#define TO_KARMA_VOTING             (242) // Hardcoded
#define TO_SNEAK                    (243)
#define TO_HEALING                  (244)
// 245..247
#define TO_STEALING                 (248)
#define TO_AGGRESSOR                (249)
// 250..259

	/// Kills
// Reserved 260..299 (BT_MEN..BT_GIANT_WASP)
#define KILL_BEGIN                 (::__KillBegin)
#define KILL_END                   (::__KillEnd)
#define KILL_COUNT                 (KILL_END-KILL_BEGIN+1)
#define KILL_MEN					(260)
#define KILL_WOMEN					(261)
#define KILL_CHILDREN				(262)
#define KILL_SUPER_MUTANT			(263)
#define KILL_GHOUL					(264)
#define KILL_BRAHMIN				(265)
#define KILL_RADSCORPION			(266)
#define KILL_RAT					(267)
#define KILL_FLOATER				(268)
#define KILL_CENTAUR				(269)
#define KILL_ROBOT					(270)
#define KILL_DOG					(271)
#define KILL_MANTI					(272)
#define KILL_DEADCLAW				(273)
#define KILL_PLANT					(274)
#define KILL_GECKO					(275)
#define KILL_ALIEN					(276)
#define KILL_GIANT_ANT				(277)
#define KILL_BIG_BAD_BOSS			(278)
// 279..280
#define KILL_PLAYERS				(281)

// 282..299

/// Perks
#define PERK_BEGIN                  (::__PerkBegin)
#define PERK_END                    (::__PerkEnd)
#define PERK_COUNT                  (PERK_END-PERK_BEGIN+1)
#define NO_QUEST_PERK_COUNT         (PE_JINXED_II-PERK_BEGIN+1)
#define	PE_ARMOR_BUSTER				(300)
#define PE_AWARENESS                (301)
#define PE_BONUS_HTH_ATTACKS        (302)
#define PE_BONUS_HTH_DAMAGE         (303)
#define PE_BONUS_MOVE               (304)
#define PE_BONUS_RANGED_DAMAGE      (305)
#define PE_BONUS_RATE_OF_FIRE       (306)
#define PE_EARLIER_SEQUENCE         (307)
#define PE_FASTER_HEALING           (308)
#define PE_MORE_CRITICALS           (309)
#define PE_NIGHT_VISION             (310) // Todo
#define PE_RAD_RESISTANCE           (312)
#define PE_TOUGHNESS                (313)
#define PE_STRONG_BACK              (314)
#define PE_SHARPSHOOTER             (315)
#define PE_SILENT_RUNNING           (316) // Hardcoded
#define PE_SURVIVALIST              (317)
#define PE_MASTER_TRADER            (318) // Hardcoded
#define PE_EDUCATED                 (319)
#define PE_HEALER                   (320)
#define PE_FORTUNE_FINDER           (321)
#define PE_BETTER_CRITICALS         (322)
#define PE_EMPATHY                  (323) // Todo
#define PE_SLAYER                   (324)
#define PE_SNIPER                   (325)
#define PE_SILENT_DEATH             (326)
#define PE_ACTION_BOY               (327)
#define PE_LIFEGIVER                (329)
#define PE_DODGER                   (330)
#define PE_SNAKEATER                (331)
#define PE_MR_FIXIT                 (332)
#define PE_MEDIC                    (333)
#define PE_MASTER_THIEF             (334)
#define PE_SPEAKER                  (335)
#define PE_HEAVE_HO                 (336)
#define PE_PICKPOCKET               (338)
#define PE_GHOST                    (339)
#define PE_EXPLORER                 (342)
#define PE_PATHFINDER               (344)
#define PE_ANIMAL_FRIEND            (345) // Todo
#define PE_SCOUT                    (346)
#define PE_MYSTERIOUS_STRANGER      (347) // Todo
#define PE_RANGER                   (348)
#define PE_QUICK_POCKETS            (349) // Hardcoded
#define PE_SMOOTH_TALKER            (350) // Hardcoded
#define PE_SWIFT_LEARNER            (351)
#define PE_MUTATE                   (353) // Todo
#define PE_REANIMATOR               (354) // Todo
#define PE_TAG						(355)
#define PE_COMBAT_EVASION			(356)
#define PE_REGROUPING				(357)
// 358..379
#define PE_ADRENALINE_RUSH          (380)
#define PE_CAUTIOUS_NATURE          (381)
#define PE_BOOKWORM            		(382)
#define PE_DEMOLITION_EXPERT        (383)
#define PE_GAMBLER                  (384)
#define PE_GAIN_STRENGTH            (385)
#define PE_GAIN_PERCEPTION          (386)
#define PE_GAIN_ENDURANCE           (387)
#define PE_GAIN_CHARISMA            (388)
#define PE_GAIN_INTELLIGENCE        (389)
#define PE_GAIN_AGILITY             (390)
#define PE_GAIN_LUCK                (391)
#define PE_HARMLESS                 (392)
#define PE_HERE_AND_NOW             (393)
#define PE_HTH_EVADE                (394)
#define PE_KAMA_SUTRA_MASTER        (395)
#define PE_KARMA_BEACON             (396)
#define PE_LIGHT_STEP               (397)
#define PE_LIVING_ANATOMY           (398)
#define PE_MAGNETIC_PERSONALITY     (399)
#define PE_NEGOTIATOR               (400)
#define PE_PACK_RAT                 (401)
#define PE_PYROMANIAC               (402)
#define PE_QUICK_RECOVERY           (403)
#define PE_SALESMAN                 (404)
#define PE_STONEWALL                (405)
#define PE_THIEF                    (406)
#define PE_WEAPON_HANDLING          (407)
#define PE_VAULT_CITY_TRAINING      (408)
// 409..416
#define PE_EXPERT_EXCREMENT         (417)
// 418
#define PE_JINXED_II                (419)
// 420..429
// Quest perks
#define PE_GECKO_SKINNING           (430)
#define PE_VAULT_CITY_INOCULATIONS  (431)
#define PE_DERMAL_IMPACT            (432)
#define PE_DERMAL_IMPACT_ENH        (433)
#define PE_PHOENIX_IMPLANTS         (434)
#define PE_PHOENIX_IMPLANTS_ENH     (435)
#define PE_NCR_PERCEPTION           (436)
#define PE_NCR_ENDURANCE            (437)
#define PE_NCR_BARTER               (438)
#define PE_NCR_REPAIR               (439)
#define PE_BRAMIN_SKINNING          (440)
#define PE_HUNTER       	        (441)
#define PE_TRACKER                  (442)
#define PE_VAMPIRE_ACCURACY         (443)
#define PE_VAMPIRE_REGENERATION     (444)
#define PE_CHIP_ST					(445)
#define PE_CHIP_PE					(446)
#define PE_CHIP_EN					(447)
#define PE_CHIP_CH					(448)
#define PE_CHIP_IN					(449)
#define PE_CHIP_AG					(450)
#define PE_BUTCHER					(451)
#define PE_CHIP_LK					(452)
#define PE_CHIP_MAX_HP				(453)
#define PE_CHIP_CARRY_WEIGHT		(454)
#define PE_CHIP_SEQUENCE			(455)
#define PE_CHIP_HEALING_RATE		(456)
#define PE_CHIP_CRITICAL_CHANCE     (457)
#define PE_CHIP_RADIATION_RESISTANCE	(458)
#define PE_CHIP_POISON_RESISTANCE		(459)
#define PE_CHIP_CRITICAL_RESISTANCE		(460)
#define PE_CHIP_ABSORB_SET1			(461)
#define PE_CHIP_ABSORB_SET2			(462)
#define PE_CHIP_RESIST_SET1			(463)
#define PE_CHIP_RESIST_SET2			(464)
#define PE_CHIP_AC					(465)
#define PE_CHIP_MELEE_DAMAGE		(466)
#define PE_CHIP_MOVEMENT_SPEED		(467)
#define PE_CHIP_AP     				(468)
#define PE_CHIP_EVADE				(469)

	/// Addictions
#define ADDICTION_BEGIN            (::__AddictionBegin)
#define ADDICTION_END              (::__AddictionEnd)
#define ADDICTION_COUNT            (ADDICTION_END-ADDICTION_BEGIN+1)
#define ADDICTION_NUKA_COLA         (470)
#define ADDICTION_BUFFOUT           (471)
#define ADDICTION_MENTATS           (472)
#define ADDICTION_PSYCHO            (473)
#define ADDICTION_RADAWAY           (474)
#define ADDICTION_JET               (475)
#define ADDICTION_TRAGIC            (476)
#define ADDICTION_VOODOO            (477)
#define ADDICTION_MUTIE            	(478)
#define ADDICTION_GUM	            (479)
// no more addictions

	/// Karma perks
#define KARMA_BEGIN                (::__KarmaBegin)
#define KARMA_END                  (::__KarmaEnd)
#define KARMA_COUNT                (KARMA_END-KARMA_BEGIN+1)
#define KARMA_BERSERKER             (480)
#define KARMA_CHAMPION              (481)
#define KARMA_CHILDKILLER           (482)
#define KARMA_SEXPERT               (483)
#define KARMA_PRIZEFIGHTER          (484)
#define KARMA_GIGOLO                (485)
#define KARMA_GRAVE_DIGGER          (486)
#define KARMA_MARRIED               (487)
#define KARMA_PORN_STAR             (488)
#define KARMA_SLAVER                (489)
#define KARMA_VIRGIN_WASTES         (490)
#define KARMA_MAN_SALVATORE         (491)
#define KARMA_MAN_BISHOP            (492)
#define KARMA_MAN_MORDINO           (493)
#define KARMA_MAN_WRIGHT            (494)
#define KARMA_SEPARATED             (495)
#define KARMA_PEDOBEAR              (496)
#define KARMA_VC_GUARDSMAN          (497)
#define KARMA_TRAPPER               (498)
// 499

	/// Damages
#define DAMAGE_BEGIN               (::__DamageBegin)
#define DAMAGE_END                 (::__DamageEnd)
#define DAMAGE_COUNT               (DAMAGE_END-DAMAGE_BEGIN+1)
#define DAMAGE_POISONED             (500) // Hardcoded
#define DAMAGE_RADIATED             (501) // Hardcoded
#define DAMAGE_EYE                  (502)
#define DAMAGE_RIGHT_ARM            (503) // Hardcoded
#define DAMAGE_LEFT_ARM             (504) // Hardcoded
#define DAMAGE_RIGHT_LEG            (505) // Hardcoded
#define DAMAGE_LEFT_LEG             (506) // Hardcoded
#define DAMAGE_TONGUE				(507) // »грок много пиздел и сломал €зык
// 508..509

	/// Modes
#define MODE_BEGIN                  (510)
#define MODE_END                    (549)
#define MODE_COUNT                  (MODE_END-MODE_BEGIN+1)
#define MODE_HIDE                   (510) // —осто€ние скрытности                                   Hardcoded
#define MODE_NO_STEAL               (511) // Ќельз€ обворовать                                      Hardcoded
#define MODE_NO_BARTER              (512) // Ќельз€ тоговать                                        Hardcoded
#define MODE_NO_ENEMY_STACK         (513) // Ќпц не запоминает врагов                               Hardcoded
#define MODE_NO_PVP                 (514) // «апрещает ѕвѕ дл€ игрока                               Hardcoded
#define MODE_END_COMBAT             (515) // —огласен ли игрок закончить пошаговый бой              Hardcoded
#define MODE_DEFAULT_COMBAT         (516) // –ежим бо€ по-умолчанию                                 Hardcoded
#define MODE_NO_HOME                (517) // Ќпц не возвращаетс€ в домашнюю позицию автоматически   Hardcoded
#define MODE_GECK                   (518) // Ћокаци€ не удал€етс€ при наличии такого нпц            Hardcoded
#define MODE_NO_FAVORITE_ITEM       (519) // –ежим установки итемов по-умолчанию                    Hardcoded
#define MODE_NO_ITEM_GARBAGER       (520) // »темы не удал€ютс€ движком                             Hardcoded
#define MODE_DLG_SCRIPT_BARTER      (521) // ¬озможно торговать при активном скрипте на диалоге     Hardcoded
#define MODE_UNLIMITED_AMMO         (522) // Ѕесконечные патроны                                    Hardcoded
#define MODE_NO_DROP                (523) // Ќельз€ сбрасывать предметы
#define MODE_NO_LOOSE_LIMBS         (524) // Ќе может тер€ть конечности
#define MODE_DEAD_AGES              (525) // ћЄртвое тело не исчезает
#define MODE_NO_HEAL                (526) // ѕовреждени€ не излечиваютс€ с течением времени
#define MODE_INVULNERABLE           (527) // Ќеу€звимый                                             Hardcoded
#define MODE_NO_FLATTEN             (528) // Ќе помещать труп на задний план после смерти           Hardcoded
#define MODE_SPECIAL_DEAD           (529) // ≈сть особый вид смерти
#define MODE_RANGE_HTH              (530) // ¬озможна рукопашна€ атака на рассто€нии                Hardcoded
#define MODE_NO_KNOCK               (531) // Ќе может быть сбит с ног
#define MODE_NO_LOOT                (532) // Ќельз€ лутать                                          Hardcoded
#define MODE_NO_SUPPLY              (533) // Ќе приход€т охотники за головами при смерти нпц
#define MODE_NO_KARMA_ON_KILL       (534) // ѕри смерти не производитс€ перерасчета кармы игрока-убийцы
#define MODE_BARTER_ONLY_CASH       (535) // ѕри бартере нпц принимает оплату только наличными
#define MODE_NO_PUSH                (536) // Can't be pushed                                        Hardcoded
#define MODE_NO_UNARMED             (537) // Not have unarmed attacks                               Hardcoded
#define MODE_NO_AIM                 (538) // Critter can't do aim attacks                           Hardcoded
#define MODE_NO_WALK                (539) // Critter can't walk                                     Hardcoded
#define MODE_NO_RUN                 (540) // Critter can't run                                      Hardcoded
#define MODE_NO_TALK                (541) // Npc can't talk                                         Hardcoded
#define MODE_ENCAUNTER_MOB          (542) // ћоб на энкаунтере
#define MODE_NO_SNEAK_PENALTY		(543)
#define MODE_TRACKER				(544)
#define MODE_TERMOVISOR				(545)
#define MODE_NIGHTVISOR				(546)
#define MODE_NO_SEE					(547) // —брасыветс€ при респауне.
#define MODE_ONLY_ARMOR_PID			(548) // ћожно носить тольо эту броню. —нимать нельз€.
#define MODE_NO_ANIMATED_DEATH		(549)

	/// Traits
#define TRAIT_BEGIN                (::__TraitBegin)
#define TRAIT_END                  (::__TraitEnd)
#define TRAIT_COUNT                (TRAIT_END-TRAIT_BEGIN+1)
#define TRAIT_FAST_METABOLISM       (550)
#define TRAIT_BRUISER               (551)
#define TRAIT_SMALL_FRAME           (552)
#define TRAIT_ONE_HANDER            (553)
#define TRAIT_FINESSE               (554)
#define TRAIT_KAMIKAZE              (555)
#define TRAIT_HEAVY_HANDED          (556)
#define TRAIT_FAST_SHOT             (557)
#define TRAIT_BLOODY_MESS           (558)
#define TRAIT_JINXED                (559)
#define TRAIT_GOOD_NATURED          (560)
#define TRAIT_CHEM_RELIANT          (561)
#define TRAIT_CHEM_RESISTANT        (562)
#define TRAIT_SEX_APPEAL            (563)
#define TRAIT_SKILLED               (564)
#define TRAIT_NIGHT_PERSON          (565)
// 17..19

	/// Reputation
// Used range in engine character screen ::__ReputationBegin..::__ReputationEnd
#define REPUTATION_BEGIN           (::__ReputationBegin)
#define REPUTATION_END             (::__ReputationEnd)
#define REPUTATION_COUNT           (REPUTATION_END-REPUTATION_BEGIN+1)
#define REPUTATION_DEN              (570)
#define REPUTATION_KLAMATH          (571)
#define REPUTATION_MODOC            (572)
#define REPUTATION_VAULT_CITY       (573)
#define REPUTATION_GECKO            (574)
#define REPUTATION_BROKEN_HILLS     (575)
#define REPUTATION_NEW_RENO         (576)
#define REPUTATION_SIERRA           (577)
#define REPUTATION_VAULT15          (578)
#define REPUTATION_NCR              (579)
#define REPUTATION_CATHEDRAL        (580)
#define REPUTATION_SAD              (581)
#define REPUTATION_REDDING          (582)
#define REPUTATION_SF               (583)
#define REPUTATION_NAVARRO          (584)
#define REPUTATION_ARROYO           (585)
#define REPUTATION_PRIMAL_TRIBE     (586)
#define REPUTATION_RANGERS          (587)
#define REPUTATION_VAULT13          (588)
#define REPUTATION_SACRAMENTO       (589)
// 590..599

#define PENALTY_BEGIN           (600)
#define PENALTY_END             (629)
#define PENALTY_COUNT           (PENALTY_END-PENALTY_BEGIN+1)
#define PENALTY_DEN              (0)
#define PENALTY_KLAMATH          (1)
#define PENALTY_MODOC            (2)
#define PENALTY_VAULT_CITY       (3)
#define PENALTY_GECKO            (4)
#define PENALTY_BROKEN_HILLS     (5)
#define PENALTY_NEW_RENO         (6)
#define PENALTY_SIERRA           (7)
#define PENALTY_VAULT15          (8)
#define PENALTY_NCR              (9)
#define PENALTY_CATHEDRAL        (10)
#define PENALTY_SAD              (11)
#define PENALTY_REDDING          (12)
#define PENALTY_SF               (13)
#define PENALTY_NAVARRO          (14)
#define PENALTY_ARROYO           (15)
#define PENALTY_PRIMAL_TRIBE     (16)
#define PENALTY_RANGERS          (17)
#define PENALTY_VAULT13          (18)
#define PENALTY_SACRAMENTO       (19)

// CityRole 630 640
#define CITY_ROLE_BEGIN				( 630 )
#define CITY_ROLE_END				( 640 )
#define CITY_ROLE_COUNT				( CITY_ROLE_END - CITY_ROLE_BEGIN + 1 )
#define CITY_ROLE_ENGINE_0		(630) // пам€ть под переменные из прототипа роли, в парамах дл€ передачи на клиент. bool CityRole_IsGuard|CityRole_IsPatrol|CityRole_IsProtected|CityRole_IsNotHelper
//631..634
#define CITY_ROLE_IM_HOME			(635) 
#define CITY_ROLE_FLAG			 	(636) // ‘лаги посетител€ города.
#define CITY_ROLE_TIME_PROVOKER	 	(637) // ¬рем€ провокации.
#define CITY_ROLE_DEFAULT_ROLE	 	(638) // –оль по умолчанию
#define CITY_ROLE_LOCATION_PID	  	(639) // ѕид локации дл€ роли. ( 0 нету локации )
#define CITY_ROLE_PENALTY_MODULE  	(640) // ћножитель штрафа.

#define ARMOR_BONUS_DRNORMAL     		 (700)
#define ARMOR_BONUS_DRLASER     		 (701)
#define ARMOR_BONUS_DRFIRE       		 (702)
#define ARMOR_BONUS_DRPLASMA     		 (703)
#define ARMOR_BONUS_DRELECTR     		 (704)
#define ARMOR_BONUS_DREXPLODE   		 (705)
#define ARMOR_BONUS_DTNORMAL     		 (706)
#define ARMOR_BONUS_DTLASER     		 (707)
#define ARMOR_BONUS_DTFIRE       		 (708)
#define ARMOR_BONUS_DTPLASMA     		 (709)
#define ARMOR_BONUS_DTELECTR     		 (710)
#define ARMOR_BONUS_AC     		 		 (711)
#define ARMOR_BONUS_DTEXPLODE     		 (712)
#define ARMOR_BONUS_DRRAD        		 (713)
#define ARMOR_BONUS_CARRYWEIGHT   	 	 (714)
#define ARMOR_BONUS_FASTERHEALING   	 (715)
#define ARMOR_BONUS_HARISMA    			 (716)
#define ARMOR_BONUS_PERCEPTION    		 (717)
#define ARMOR_BONUS_STRENGTH     		 (718)
#define ARMOR_BONUS_CRITICAL_RESISTANCE  (719)
#define ARMOR_BONUS_LUCK    			 (720)
#define ARMOR_BONUS_ACTION_POINTS     	 (721)
#define WEAPON_BONUS_TOHIT 			 	 (722)

#define ARMOR_BONUS_MELEE_DAMAGE    	 (727)
#define ITEM_BONUS_UPGRADE_SLOT_0    	 (728)
#define ITEM_BONUS_UPGRADE_SLOT_1    	 (729)
#define ITEM_BONUS_UPGRADE_SLOT_2    	 (730)

// Industrial 750-799
	// Industrial
#define IN_FAST_PRODUCTION	     		 (750)
#define IN_MATERIAL_SAVINGS	     		 (751)
#define IN_REPROCESS_MASTER	     		 (752)
#define IN_INVENTOR						 (753)
#define IN_ADV_CRAFT_EXP				 (754)

// Score
#define IN_LEATHER_ARMOR_SCORE		     (760)
#define IN_METALL_ARMOR_SCORE   	     (761)
#define IN_COMBAT_ARMOR_SCORE   	     (762)
#define IN_POWER_ARMOR_SCORE   		     (763)
#define IN_UNARMED_WEAPON_SCORE			 (764)
#define IN_SMALL_WEAPON_SCORE			 (765)
#define IN_BIG_WEAPON_SCORE			 	 (766)
#define IN_ENERGY_WEAPON_SCORE		     (767)

	// Bonuses
#define IN_KNOWLEDGE_THEIR_PRODUCTS	 	 (770)
#define IN_ROLL_BONUS_RANDOMISATION  	 (771)
#define IN_CHANCE_BONUS_RANDOMISATION  	 (772)
#define IN_ARMOR_MASTER					 (773)
#define IN_WEAPON_MASTER				 (774)
#define IN_LEATHER_ARMOR_SPECIALISATION  (775)
#define IN_METALL_ARMOR_SPECIALISATION   (776)
#define IN_COMBAT_ARMOR_SPECIALISATION	 (777)
#define IN_POWER_ARMOR_SPECIALISATION    (778)
#define IN_SMALL_WEAPON_SPECIALISATION   (779)
#define IN_BIG_WEAPON_SPECIALISATION     (780)
#define IN_ENERGY_WEAPON_SPECIALISATION  (781)
#define IN_UNARMED_WEAPON_SPECIALISATION (782)

#define IN_LEATHER_ARMOR   			     (1)
#define IN_METALL_ARMOR   			     (2)
#define IN_COMBAT_ARMOR   			     (3)
#define IN_POWER_ARMOR   			     (4)
#define IN_UNARMED_WEAPON				 (5)
#define IN_SMALL_WEAPON					 (6)
#define IN_BIG_WEAPON					 (7)
#define IN_ENERGY_WEAPON   			     (8)
// ƒев€тка зан€та на запрет декрафта
#define IN_DECRAFT_NO_POSYBLE		     (9)
#define IN_SEC_DECRAFT_NO_POSYBLE	     (10)

#define DEFAULT_MAX_REPAIR_COUNT	     (300)

	/// Mercenary settings
#define MERC_BEGIN                  (800)
#define MERC_END                    (829)
#define MERC_COUNT                  (MERC_END-MERC_BEGIN+1)
// ƒл€ нпц.
#define MERC_MASTER_ID              (800) // Id хоз€ина мерка
#define MERC_ALWAYS_RUN             (801) // ѕризнак, мерк перемещает€ бегом при следовании за хоз€ином
#define MERC_CANCEL_ON_ATTACK       (802) // ѕризнак, отмен€ет ли мерк службу, если хоз€ин атакует самого мерка.
#define MERC_LOSE_DIST              (803) // ƒистанци€, при превышении которой мерк "отстает" от хоз€ина и отмен€ет режиме мерка.
#define MERC_MASTER_DIST            (804) // ƒистанци€, которой придерживаетс€ мерк в режиме следовани€ за хоз€ином
#define MERC_TYPE                   (805) // “ип мерка. —м. merc_h
#define MERC_DEFEND_MASTER          (806) // ѕризнак: мерк защищает хоз€ина, если тот атакован
#define MERC_ASSIST_MASTER          (807) // ѕризнак: если хоз€ин атакует цель, мерк присоедин€етс€ к атаке
#define MERC_CANCEL_TIME            (808) // ¬рем€ завершени€ службы
#define MERC_CANCEL_ON_GLOBAL       (809) // ѕризнак: мерк отмен€ет службу, если хоз€ин вышел на глобальную карту.
#define MERC_WAIT_FOR_MASTER        (811) //—ледовать за хоз€ином
#define MERC_GIVEN           		(812) // передаетс€ другому игроку
#define MERC_IS_SLAVE				(813) // признак того что мерк €вл€етс€ рабом.
#define MERC_FLAGS					(814)
#define MERC_BEHAVIOUR_FLAGS		(815)
#define MASTER_COUNT_MERC			(816)


// Custom name
#define CUSTOM_NAME_BEGIN				(900)
#define CUSTOM_NAME_RUSS_BEGIN			(900)
#define CUSTOM_NAME_RUSS_END			(904)
#define CUSTOM_NAME_ENGL_BEGIN			(905)
#define CUSTOM_NAME_ENGL_END			(909)
#define CUSTOM_NAME_END					(909)


#define BEGIN_PATROL_PARAM (960)
#define END_PATROL_PARAM (969)
#define COUNT_PATROL_PARAM (END_PATROL_PARAM-BEGIN_PATROL_PARAM+1)
#define PL_COUNT_POINT	(960)
#define PL_START_POINT	(961)
#define PL_CURRENT_POINT	(962)
#define PL_GRUP_NUMBER		(963)
#define PL_PATRULLER_ID		(964)

//
// 961..999
//

#define PARAMS_COUNT                (1000)

// Planes types
#define AI_PLANE_MISC               (0)
#define AI_PLANE_ATTACK             (1)
#define AI_PLANE_WALK               (2)
#define AI_PLANE_PICK               (3)
#define AI_PLANE_PATROL             (4) // WIP
#define AI_PLANE_COURIER            (5) // WIP
#define AI_PLANE_PROSECUTION		(10)
#define AI_PLANE_COUNT				(10)

// Type Transit Walk Plane
/*
				0 - Ќе переноситс€.
				1 - ѕереноситс€ на энтайри на карте 
				2 - ѕереноситс€ на гекс на карте
				3 - ѕереноситс€ на глобальную карту, над текущей локацией
				4 - ѕереноситс€ по координатам глобальной карты
				5 - ѕереноситс€ на глобальную карту в группу
				6 - Ћечение, либо использовать другс
				7 - —воровать или подсунуть
			*/
#define AI_PLANE_WALK_TRANSIT_NONE     (0)
#define AI_PLANE_WALK_TRANSIT_ENTIRE   (1)
#define AI_PLANE_WALK_TRANSIT_HEX      (2)
#define AI_PLANE_WALK_TRANSIT_GM       (3)
#define AI_PLANE_WALK_TRANSIT_GM_COORD (4)
#define AI_PLANE_WALK_TRANSIT_GM_GROUP (5)
#define AI_PLANE_WALK_HEAL			   (6)
#define AI_PLANE_WALK_STEAL			   (7)

// Planes deault priority
#define AI_PLANE_MISC_PRIORITY      (10)
#define AI_PLANE_ATTACK_PRIORITY    (1000)
#define AI_PLANE_HEAL_PRIORITY    	(5000)
#define AI_PLANE_WALK_PRIORITY      (20)
#define AI_PLANE_PICK_PRIORITY      (35)
#define AI_PLANE_PATROL_PRIORITY    (25)
#define AI_PLANE_COURIER_PRIORITY   (30)
#define AI_PLANE_PROSECUTION_PRIORITY (21)

// Plane begin/end/run reasons
	// Begin
#define REASON_GO_HOME              (10)
#define REASON_FOUND_IN_ENEMY_STACK (11)
#define REASON_FROM_DIALOG          (12)
#define REASON_FROM_SCRIPT          (13)
#define REASON_RUN_AWAY             (14)
	// End
#define REASON_SUCCESS              (30)
#define REASON_HEX_TOO_FAR          (31)
#define REASON_HEX_BUSY             (32)
#define REASON_HEX_BUSY_RING        (33)
#define REASON_DEADLOCK             (34)
#define REASON_TRACE_FAIL           (35)
#define REASON_POSITION_NOT_FOUND   (36)
#define REASON_FIND_PATH_ERROR      (37)
#define REASON_CANT_WALK            (38)
#define REASON_TARGET_DISAPPEARED   (39)
#define REASON_USE_ITEM_NOT_FOUND   (40)
#define REASON_GAG_CRITTER          (41)
#define REASON_GAG_ITEM             (42)
#define REASON_NO_UNARMED           (43)
	// Run
#define REASON_ATTACK_TARGET        (50)
#define REASON_ATTACK_WEAPON        (51)
#define REASON_ATTACK_DISTANTION    (52)
#define REASON_ATTACK_USE_AIM       (53)
#define REASON_ATTACK_IM_DAMAGE	    (54) // ѕричина € нанес дамаг, при возврате true план переназначитс€ дл€ обновлени€ дистанции атаки и прочего.
#define REASON_ATTACK_I_GOT_DAMAGE	(55) // ѕричина мне нанесли дамаг, при возврате true план переназначитс€ дл€ обновлени€ дистанции атаки и прочего.

// Locker
#define LOCKER_ISOPEN               (0x01) // Hardcoded
#define LOCKER_LOCKED               (0x02)
#define LOCKER_JAMMED               (0x04)
#define LOCKER_BROKEN               (0x08)
#define LOCKER_NOOPEN               (0x10) // Hardcoded
#define LOCKER_ELECTRO              (0x20)
#define LOCKER_FARM		            (0x40)  // FarmLock
#define LOCKER_FACTION				(0x80)  // Faction check
#define LOCKER_NOUSE				(0x100) // 
#define LOCKER_TAGGED				(0x200) // ‘лаг дл€ произвольного использовани€
#define LOCKER_GUARD_OPEN			(0x400) // ќткрыто охраной, нельз€ закрыть пока охрана р€дом
#define LOCKER_TIMER_LOCK			(0x800) // ¬злом замка происходит с временнем

// Timer
#define TIMER_MIN_VALUE             (1)
#define TIMER_MAX_VALUE             (20)

//»ндексы таймеров
#define	TIMER_DYNAMITE		(0)
#define	TIMER_DRUGS			(1)
#define	TIMER_SLOW			(2)

// Timeouts in real seconds, generic values
#define FIRST_AID_TIMEOUT     #(cr) (::__FullSecond+(::__TimeMultiplier*100/(((cr.Skill[SK_FIRST_AID])>3?cr.Skill[SK_FIRST_AID]:3)*100/MAX_SKILL_VAL))*60) // Orig 3 time on day, 5 min - sk
#define DOCTOR_TIMEOUT        #(cr) (::__FullSecond+(::__TimeMultiplier*100/(((cr.Skill[SK_DOCTOR])>3?cr.Skill[SK_DOCTOR]:3)*100/MAX_SKILL_VAL)*3)*60) // Orig 1 time on day, 20 min - sk
#define REPAIR_TIMEOUT        #(cr) (::__FullSecond+REAL_MINUTE(1)) // Orig 4 time on day, 1 min
#define SCIENCE_TIMEOUT       #(cr) (::__FullSecond+REAL_MINUTE(1)) // Orig 6 time on day, 1 min
#define LOCKPICK_TIMEOUT      #(cr) (::__FullSecond+REAL_SECOND(60-cr.Skill[SK_LOCKPICK]/10)) // Orig 15 minutes, 2 min
#define STEAL_TIMEOUT         #(cr) (::__FullSecond+REAL_SECOND(MAX(120-cr.Skill[SK_STEAL]/2,20)))
#define TRANSFER_TIMEOUT      #(cr) (::__FullSecond+::__TimeoutTransfer)
#define BATTLE_TIMEOUT        #(cr) (::__FullSecond+MAX(REAL_SECOND(45-cr.Stat[ST_AGILITY]),int(REAL_SECOND(5))))
#define TRAPS_TIMEOUT         #(cr) (::__FullSecond+REAL_MINUTE(1))
#define SNEAK_TIMEOUT         #(cr) (::__FullSecond+REAL_SECOND(MAX(34-cr.Stat[ST_SEQUENCE],3))) // 34 second - sequence
#define HEALING_TIMEOUT       #(cr) (::__FullSecond+REAL_MINUTE(1)) // 1 minutes
#define IS_TURN_BASED_TIMEOUT #(cr) (cr.Timeout[TO_BATTLE]>10000000)
#define MAXIMUM_TIMEOUT             (REAL_HOUR(5)) // Doctor timeout with min skill

// Transfer types
#define TRANSFER_CLOSE              (0)
#define TRANSFER_HEX_CONT_UP        (1)
#define TRANSFER_HEX_CONT_DOWN      (2)
#define TRANSFER_SELF_CONT          (3)
#define TRANSFER_CRIT_LOOT          (4)
#define TRANSFER_CRIT_STEAL         (5)
#define TRANSFER_CRIT_BARTER        (6)
#define TRANSFER_FAR_CONT           (7)
#define TRANSFER_FAR_CRIT           (8)

// Scores
#define SCORE_EVIL_OF_HOUR          (0)
#define SCORE_HERO_OF_HOUR          (1)
#define SCORE_KARMA_ON_HOUR         (2)
#define SCORE_SPEAKER               (3) // Hardcoded
#define SCORE_TRADER                (4) // Hardcoded
#define SCORE_ZOMBY                 (5)
#define SCORE_PATY                  (6)
#define SCORE_MANIAC                (7)
#define SCORE_SCAUT                 (8)
#define SCORE_DOCTOR                (9)
#define SCORE_SHOOTER               (10)
#define SCORE_MELEE                 (11)
#define SCORE_UNARMED               (12)
#define SCORE_THIEF                 (13)
#define SCORE_DRIVER                (14)
#define SCORE_KILLER                (15)
#define SCORE_SNIPER                (16)
#define SCORE_ADVENTURER            (17)
#define SCORE_CRACKER               (18)
#define SCORE_UNARMED_DAMAGE        (19)
#define SCORE_RITCH                 (20)
#define SCORE_CHOSEN_ONE            (21)
#define SCORE_CRAFTER               (22)
#define SCORE_ARMOR_MASTER          (23)
#define SCORE_WEAPON_MASTER         (24)
#define SCORE_SIERRA_CUR            (40)
#define SCORE_MARIPOSA_CUR          (41)
#define SCORE_CATHEDRAL_CUR         (42)
#define SCORE_SIERRA_BEST           (43)
#define SCORE_MARIPOSA_BEST         (44)
#define SCORE_CATHEDRAL_BEST        (45)
#define SCORE_SIERRA_ORG            (46)
#define SCORE_MARIPOSA_ORG          (47)
#define SCORE_CATHEDRAL_ORG         (48)
#define SCORE_BASE_BEST_ORG         (49)
#define SCORES_MAX                  (50)

// Car flags
#define CAR_BIO_ENGINE              (0x0001)
#define CAR_NO_LOCKPICK             (0x0002)

// Body types
#define IsHumanoid #(cr)	(cr.Stat[ST_BODY_TYPE]==BT_MEN || cr.Stat[ST_BODY_TYPE]==BT_WOMEN || cr.Stat[ST_BODY_TYPE]==BT_CHILDREN || cr.Stat[ST_BODY_TYPE]==BT_SUPER_MUTANT || cr.Stat[ST_BODY_TYPE]==BT_GHOUL)

#define BT_MEN                      (0)
#define BT_WOMEN                    (1)
#define BT_CHILDREN                 (2)
#define BT_SUPER_MUTANT             (3)
#define BT_GHOUL                    (4)

#define BT_BRAHMIN                  (5)
#define BT_RADSCORPION              (6)
#define BT_RAT                      (7)
#define BT_FLOATER                  (8)
#define BT_CENTAUR                  (9)
#define BT_ROBOT                    (10)
#define BT_DOG                      (11)
#define BT_MANTI                    (12)
#define BT_DEADCLAW                 (13)
#define BT_PLANT                    (14)
#define BT_GECKO                    (15)
#define BT_ALIEN                    (16)
#define BT_GIANT_ANT                (17)
#define BT_BIG_BAD_BOSS             (18)
#define BT_GIANT_BEETLE             (19)
#define BT_GIANT_WASP               (20)
#define BT_WASP                     (21)
#define MAX_BODY_TYPES              (22)

// Locomotion types
#define LOCOMOTION_BIPED            (0)
#define LOCOMOTION_QUADRUPED        (1)
#define LOCOMOTION_ROBOTIC          (2)
#define LOCOMOTION_FLY              (3)

// Other
#define FLUSH_SCREEN_DEFAULT        (1000) // Flush screen time

// Dilalog functions
#define IS_DIALOG_END #(str)        (not valid(str))
#define IS_DIALOG_GENERATED #(str)  (valid(str) && str.length()==0)
#define IS_DIALOG_SAY_MODE #(str)   (valid(str) && str.length()>0)

// Time
#define IS_MORNING #(hour)          ((hour)>=7 && (hour)<=11) // 5 hours
#define IS_AFTERNOON #(hour)        ((hour)>=12 && (hour)<=21) // 10 hours
#define IS_NIGHT #(hour)            ((hour)>=22 || (hour)<=6) // 9 hours

// Item deterioration info
#define MAX_DETERIORATION           (10000) // Hardcoded
#define MAX_BROKENS                 (10)
	// Broken Information
#define BI_LOWBROKEN				(0x01)
#define BI_NORMBROKEN				(0x02)
#define BI_HIGHBROKEN				(0x04)
#define BI_NOTRESC					(0x08)
#define BI_BROKEN					(0x0F) // Hardcoded
#define BI_SERVICE					(0x10)
#define BI_SERVICE_EXT				(0x20)
#define BI_ETERNAL					(0x40)

// Craft Flags
#define CF_UPGRADE_SLOT_0					(0x01)	// ƒоступен апгрейд 1 слота
#define CF_UPGRADE_SLOT_1					(0x02)	// ƒоступен апгрейд 2 слота
#define CF_UPGRADE_SLOT_2					(0x04)	// ƒоступен апгрейд 3 слота
#define CF_UPGRADE_SLOT_0_BUSSY				(0x08)	// ƒоступен апгрейд 1 слота
#define CF_UPGRADE_SLOT_1_BUSSY				(0x10)	// ƒоступен апгрейд 2 слота
#define CF_UPGRADE_SLOT_2_BUSSY				(0x20)	// ƒоступен апгрейд 3 слота

// Combat modes
#define COMBAT_MODE_ANY             (0)
#define COMBAT_MODE_REAL_TIME       (1)
#define COMBAT_MODE_TURN_BASED      (2)

// Show screen modes
// Ouput: it is 'uint param' in Critter::ShowScreen.
// Input: I - integer value 'uint answerI', S - string value 'string& answerS' in 'answer_' function.
#define SCREEN_CLOSE                (0)  // Close top window.
#define SCREEN_TIMER                (1)  // Timer box. Output: picture index in INVEN.LST. Input I: time in game minutes (1..599).
#define SCREEN_DIALOGBOX            (2)  // Dialog box. Output: buttons count - 0..20 (exit button added automatically). Input I: Choosed button - 0..19.
#define SCREEN_SKILLBOX             (3)  // Skill box. Input I: selected skill.
#define SCREEN_BAG                  (4)  // Bag box. Input I: id of selected item.
#define SCREEN_SAY                  (5)  // Say box. Output: all symbols - 0 or only numbers - any other number. Input S: typed string.
#define SCREEN_ELEVATOR             (6)  // Elevator. Output: look ELEVATOR_* macro. Input I: Choosed level button.
#define SCREEN_INVENTORY            (7)  // Inventory.
#define SCREEN_CHARACTER            (8)  // Character.
#define SCREEN_FIXBOY               (9)  // Fix-boy.
#define SCREEN_PIPBOY               (10) // Pip-boy.
#define SCREEN_MINIMAP              (11) // Mini-map.

// Global map fog
#define FOG_FULL                    (0)
#define FOG_HALF                    (1)
#define FOG_HALF_EX                 (2)
#define FOG_NONE                    (3)

// Critter extra flags, only for read
#define CRITTER_PLAYER              (0x00010000) // »грок.
#define CRITTER_NPC                 (0x00020000) // Ќпц.
#define CRITTER_DISCONNECT          (0x00080000) // ¬ оффлайне.
#define CRITTER_CHOSEN              (0x00100000) //  риттер игрока. »спользуетс€ только при отправке сообщени€ клиенту дл€ идентификации его персонажа.
#define CRITTER_RULEGROUP           (0x00200000) // –улевой в группе на глобале.

// Hit locations
#define HIT_LOCATION_NONE           (0)
#define HIT_LOCATION_HEAD           (1)
#define HIT_LOCATION_LEFT_ARM       (2)
#define HIT_LOCATION_RIGHT_ARM      (3)
#define HIT_LOCATION_TORSO          (4)
#define HIT_LOCATION_RIGHT_LEG      (5)
#define HIT_LOCATION_LEFT_LEG       (6)
#define HIT_LOCATION_EYES           (7)
#define HIT_LOCATION_GROIN          (8)
#define HIT_LOCATION_UNCALLED       (9)

// Sound types
	// Generic<Type Subtype SoundId SoundIdExt X X X X>
	// Weapon<Type Subtype SoundId SoundIdExt X X X [Random 1 or 2]>
#define SOUND_WEAPON                 'W'
#define SOUND_WEAPON_USE             'A'
#define SOUND_WEAPON_FLY             'F'
#define SOUND_WEAPON_MISS            'H'
#define SOUND_WEAPON_EMPTY           'O'
#define SOUND_WEAPON_RELOAD          'R'
	// Door<Type Subtype D O O R S SoundId>
#define SOUND_DOOR                   'S'
#define SOUND_DOOR_OPEN              'O'
#define SOUND_DOOR_LOCK              'L'
#define SOUND_DOOR_CLOSE             'C'
#define SOUND_DOOR_NOT_OPEN          'N'

// Critter find types
// Combine groups with | operator
#define FIND_LIFE                   (0x01) // First group
#define FIND_KO                     (0x02)
#define FIND_DEAD                   (0x04)
#define FIND_LIFE_AND_KO            (FIND_LIFE | FIND_KO)
#define FIND_LIFE_AND_DEAD          (FIND_LIFE | FIND_DEAD)
#define FIND_KO_AND_DEAD            (FIND_DEAD | FIND_KO)
#define FIND_ALL                    (0x0F)
#define FIND_ONLY_PLAYERS           (0x10) // Second group
#define FIND_ONLY_NPC               (0x20)

// Elevators
#define ELEVATOR_X   #(elevator,current_level)     ((uint((current_level)&0xFFFF)<<16)|(elevator)&0xFFFF)
#define ELEVATOR_BOS_1234     #(current_level)     (ELEVATOR_X(0,current_level))
#define ELEVATOR_BOS_01       #(current_level)     (ELEVATOR_X(1,current_level))
#define ELEVATOR_MASTER_123   #(current_level)     (ELEVATOR_X(2,current_level))
#define ELEVATOR_MASTER_34    #(current_level)     (ELEVATOR_X(3,current_level))
#define ELEVATOR_MILITARY_123 #(current_level)     (ELEVATOR_X(4,current_level))
#define ELEVATOR_MILITARY_34  #(current_level)     (ELEVATOR_X(5,current_level))
#define ELEVATOR_MILITARY_346 #(current_level)     (ELEVATOR_X(6,current_level)) // Use 6 level as 5
#define ELEVATOR_MILITARY_456 #(current_level)     (ELEVATOR_X(7,current_level))
#define ELEVATOR_VAULT_123    #(current_level)     (ELEVATOR_X(8,current_level))

// Dialog links
#define DIALOG_END                  uint(-1)
#define DIALOG_BACK                 uint(-2)
#define DIALOG_BARTER               uint(-3)
#define DIALOG_ATTACK               uint(-4)

// Fix boy function call states
#define FIXBOY_LIST                (0)
#define FIXBOY_BUTTON              (1)
#define FIXBOY_CRAFT               (2)

// Fix boy craft results
#define FIXBOY_ALLOW_CRAFT         (0x0001)
#define FIXBOY_CHECK_TIMEOUT       (0x0002)
#define FIXBOY_SET_TIMEOUT         (0x0004)
#define FIXBOY_CHECK_PARAMS        (0x0008)
#define FIXBOY_CHECK_MATERIALS     (0x0010)
#define FIXBOY_CHECK_TOOLS         (0x0020)
#define FIXBOY_SUB_MATERIALS       (0x0040)
#define FIXBOY_ADD_CRAFT_ITEMS     (0x0080)
#define FIXBOY_ADD_EXPERIENCE      (0x0100)
#define FIXBOY_SEND_SUCC_MESSAGE   (0x0200)
#define FIXBOY_SEND_FAIL_MESSAGE   (0x0400)
#define FIXBOY_DEFAULT             (0xFFFF)

// Access levels
#define ACCESS_CLIENT              (0)
#define ACCESS_TESTER              (1)
#define ACCESS_MODER               (2)
#define ACCESS_ADMIN               (3)

// Special skill values
#define SKILL_PICK_ON_GROUND       (-1)
#define SKILL_PUT_CONT             (-2)
#define SKILL_TAKE_CONT            (-3)
#define SKILL_TAKE_ALL_CONT        (-4)
#define SKILL_LOOT_CRITTER         (-5)
#define SKILL_PUSH_CRITTER         (-6)
#define SKILL_TALK                 (-7)
#define SKILL_UNLOCK               (-8) // ѕредмет взломали
#define SKILL_CHECK_ENEMY          (-9) // ѕроверка враг ли криттер
#define SKILL_CHECK_ALLY           (-10) // ѕроверка союзник ли криттер

// Look checks
#define LOOK_CHECK_DIR              (0x01) // Nerfe look by directions of look
#define LOOK_CHECK_SNEAK_DIR        (0x02) // Nerfe opponent sneak by directions of look
#define LOOK_CHECK_SNEAK_WEIGHT     (0x04) // Nerfe sneak by current weight
#define LOOK_CHECK_TRACE            (0x08) // Tracing for wall aviablility
#define LOOK_CHECK_SCRIPT           (0x10) // Allow bool check_look(...) in main.fos, all other defines ignored
#define LOOK_CHECK_ITEM_SCRIPT 		(0x20) // Allow bool check_trap_look(...) in main.fos, for items with ITEM_TRAP flag

// Critter base types
#define CRTYPE_DEFAULT_M            (CRTYPE_DW_JUMPSUIT_M)
#define CRTYPE_DEFAULT_F            (CRTYPE_DW_JUMPSUIT_F)

#define CRTYPE_NONE                 (0) // Used with ST_BASE_CRTYPE as default

//Supermutant
#define CRTYPE_SUPERMUTANT			(21)
#define CRTYPE_SM_LEATHER_JACKET	(20)
#define CRTYPE_SM_LIEUTENANT		(49)

	// Dweller
#define CRTYPE_DW_JUMPSUIT_M        (11)
#define CRTYPE_DW_JUMPSUIT_F        (4)
#define CRTYPE_DW_LEATHER_JACKET_F  (6)
#define CRTYPE_DW_LEATHER_ARMOR_M   (12)
#define CRTYPE_DW_LEATHER_ARMOR_F   (5)
#define CRTYPE_DW_LEATHER_JACKET_M  (13)
#define CRTYPE_DW_METAL_ARMOR_M     (14)
#define CRTYPE_DW_METAL_ARMOR_F     (7)
#define CRTYPE_DW_LEATHER_ARMOR_MK2    (133)
#define CRTYPE_DW_LEATHER_ARMOR_MK2_F    (132)
#define CRTYPE_DW_TRIBAL_F          (63)
#define CRTYPE_DW_TRIBAL_M          (64)
	// Vault citizen
#define CRTYPE_VAULT_M              (69)
#define CRTYPE_VAULT_F              (74)
	// Robots
#define CRTYPE_ROBOT                (66)
#define CRTYPE_BOSS					(85)
	// Long Hair Dude
#define CRTYPE_LHD_JUMPSUIT         (106) // Used with ST_BASE_CRTYPE
#define CRTYPE_LHD_LEATHER_ARMOR    (107)
#define CRTYPE_LHD_LEATHER_JACKET   (108)
#define CRTYPE_LHD_METAL_ARMOR      (109)
#define CRTYPE_LHD_TRIBAL           (110)
//skins
#define CRTYPE_NAGHUL			   (28)
#define CRTYPE_PURPLE_ROBE			   (2)
#define CRTYPE_BLACK_ROBE			   (84)
#define CRTYPE_CHITIN_M			   (142)
#define CRTYPE_CHITIN_F			   (143)
#define CRTYPE_COMBAT_ARMOR_M			   (10)
#define CRTYPE_COMBAT_ARMOR_F		   (3)
#define CRTYPE_B_COMBAT_ARMOR_M			   (111)
#define CRTYPE_B_COMBAT_ARMOR_F			   (112)
#define CRTYPE_PA			   (1)
#define CRTYPE_PA_NO_HEAD	   (30)
#define CRTYPE_APA			   (71)
#define CRTYPE_SENTRY			   (66)

// Mobs
#define CRTYPE_RAT                               ( 24 )
#define CRTYPE_MOLESKIN_RAT_BIG                  ( 19 )
	// Bald Dude
#define CRTYPE_BD_JUMPSUIT         (144) // Used with ST_BASE_CRTYPE
#define CRTYPE_BD_LEATHER_ARMOR_MK2    (145)
#define CRTYPE_BD_LEATHER_ARMOR   (146)
#define CRTYPE_BD_LEATHER_JACKET      (147)
#define CRTYPE_BD_METAL_ARMOR           (148)
#define CRTYPE_BD_TRIBAL           (149)
	// Other
#define CRTYPE_VAULT_BOY            (249)
	// 3d critters
#define CRTYPE_3D_MALE_NORMAL       (290)
#define CRTYPE_3D_MALE_WIRY         (291)
#define CRTYPE_3D_MALE_STRONG       (292)
#define CRTYPE_3D_MALE_FAT          (293)
#define CRTYPE_3D_MALE_SKELETON     (294)
#define CRTYPE_3D_FEMALE_NORMAL     (295)
#define CRTYPE_3D_FEMALE_WIRY       (296)
#define CRTYPE_3D_FEMALE_STRONG     (297)
#define CRTYPE_3D_FEMALE_FAT        (298)
#define CRTYPE_3D_FEMALE_SKELETON   (299)
#define CRTYPE_3D_ANT               (300)
#define CRTYPE_3D_ANT_QUEEN         (301)
#define CRTYPE_3D_BAT               (302)
#define CRTYPE_3D_BEETLE            (303)
#define CRTYPE_3D_CENTIPEDE         (304)
#define CRTYPE_3D_COUGAR            (305)
#define CRTYPE_3D_COW               (306)
#define CRTYPE_3D_DEATHCLAW         (307)
#define CRTYPE_3D_DESERT_STALKER    (308)
#define CRTYPE_3D_DOG               (309)
#define CRTYPE_3D_GILA              (310)
#define CRTYPE_3D_MANTRAP           (311)
#define CRTYPE_3D_RAD_TOAD          (312)
#define CRTYPE_3D_RAT               (313)
#define CRTYPE_3D_THORN_SLINGER     (314)
#define CRTYPE_3D_WASP_GIANT        (315)
#define CRTYPE_3D_WEEDLING          (316)
	// Tactics
#define CRTYPE_TACTICS_RHUMANOID    (460)
	// Arcanum
#define CRTYPE_ARCANUM_GEN_CR_BEGIN (600)
#define CRTYPE_ARCANUM_GEN_CR_END   (699)

// Global map events
#define GLOBAL_PROCESS_MOVE         (0) // Called every ::__GlobalMapMoveTime
#define GLOBAL_PROCESS_ENTER        (1)
#define GLOBAL_PROCESS_START_FAST   (2)
#define GLOBAL_PROCESS_START        (3)
#define GLOBAL_PROCESS_SET_MOVE     (4)
#define GLOBAL_PROCESS_STOPPED      (5)
#define GLOBAL_PROCESS_NPC_IDLE     (6) // Called every ::__CritterIdleTick
#define GLOBAL_PROCESS_KICK         (7)
#define GLOBAL_MAP_BASE_SPEED       (4.2f) // Base speed, 2 pixels per second

// Global map walk types
#define GM_WALK_GROUND              (0)
#define GM_WALK_FLY                 (1)
#define GM_WALK_WATER               (2)
#define GM_WALK_UNDERGROUND			(3)

// AngelScript properties
#define AS_ALLOW_UNSAFE_REFERENCES      (1)  // true
#define AS_OPTIMIZE_BYTECODE            (2)  // true
#define AS_COPY_SCRIPT_SECTIONS         (3)  // true
#define AS_MAX_STACK_SIZE               (4)  // 0 (unlimited)
#define AS_USE_CHARACTER_LITERALS       (5)  // false
#define AS_ALLOW_MULTILINE_STRINGS      (6)  // false
#define AS_ALLOW_IMPLICIT_HANDLE_TYPES  (7)  // false
#define AS_BUILD_WITHOUT_LINE_CUES      (8)  // false
#define AS_INIT_GLOBAL_VARS_AFTER_BUILD (9)  // true
#define AS_REQUIRE_ENUM_SCOPE           (10) // false
#define AS_SCRIPT_SCANNER               (11) // 0
#define AS_INCLUDE_JIT_INSTRUCTIONS     (12) // false
#define AS_STRING_ENCODING              (13) // 0 (ascii)
#define AS_PROPERTY_ACCESSOR_MODE       (14) // 0 disable, 1 app registered only, 2 app and script created (default)

// Item data masks
#define ITEM_DATA_MASK_CHOSEN       (0)
#define ITEM_DATA_MASK_CRITTER      (1)
#define ITEM_DATA_MASK_CRITTER_EXT  (2)
#define ITEM_DATA_MASK_CONTAINER    (3)
#define ITEM_DATA_MASK_MAP          (4)

// Radio
	// Flags, Item/ItemCl::RadioFlags
#define RADIO_DISABLE_SEND          (0x0001) // Hardcoded
#define RADIO_DISABLE_RECV          (0x0002) // Hardcoded
#define RADIO_DISABLE_SHIFT_SEND    (0x0100)
#define RADIO_DISABLE_SHIFT_RECV    (0x0200)
#define RADIO_DISABLE_SHIFT_BC_SEND (0x0400)
#define RADIO_DISABLE_SHIFT_BC_RECV (0x0800)
#define RADIO_DISABLE_SHIFT_CHANNEL (0x1000)
	// Broadcast, Item/ItemCl::RadioBroadcastSend/RadioBroadcastRecv, Hardcoded
#define RADIO_BROADCAST_WORLD       (0)       // Send/recv in all world
#define RADIO_BROADCAST_MAP         (20)      // Send/recv only on one map
#define RADIO_BROADCAST_LOCATION    (40)      // Send/recv only on one location
#define RADIO_BROADCAST_ZONE #(x)   (100+(x)) // Send/recv only in x (1..100) zones radius on global map
#define RADIO_BROADCAST_FORCE_ALL   (250)     // Force send/recv in any place

// Weapon calibers
#define CALIBER_NONE                (0)
#define CALIBER_ROCKET              (1)
#define CALIBER_FLAMETHROWER_FUEL   (2)
#define CALIBER_C_ENERGY_CELL       (3)
#define CALIBER_D_ENERGY_CELL       (4)
#define CALIBER_223                 (5)
#define CALIBER_5MM                 (6)
#define CALIBER_40                  (7)
#define CALIBER_10MM                (8)
#define CALIBER_44                  (9)
#define CALIBER_14MM                (10)
#define CALIBER_12_GAUGE            (11)
#define CALIBER_9MM                 (12)
#define CALIBER_BB                  (13)
#define CALIBER_45                  (14)
#define CALIBER_2MM                 (15)
#define CALIBER_4_7MM_CASELESS      (16)
#define CALIBER_HN_NEEDLER          (17)
#define CALIBER_7_62MM              (18)
#define CALIBER_700_NITRO_EXPRESS   (19)
#define CALIBER_SIGNAL_ROCKET 		(20)

// Constants collections
#define CONSTANTS_PARAM             (0)
#define CONSTANTS_ITEM              (1)
#define CONSTANTS_DEFINE            (2)
#define CONSTANTS_PICTURE           (3)
#define CONSTANTS_HASH              (4)

// Game images
#define IMAGE_RELIEF                (0) // Global map relief

// Paths
	// Client and mapper paths
#define PT_ROOT                     (0)
#define PT_DATA                     (1)
#define PT_ART                      (2)
#define PT_ART_CRITTERS             (3)
#define PT_ART_INTRFACE             (4)
#define PT_ART_INVEN                (5)
#define PT_ART_ITEMS                (6)
#define PT_ART_MISC                 (7)
#define PT_ART_SCENERY              (8)
#define PT_ART_SKILLDEX             (9)
#define PT_ART_SPLASH               (10)
#define PT_ART_TILES                (11)
#define PT_ART_WALLS                (12)
#define PT_TEXTURES                 (13)
#define PT_EFFECTS                  (14)
#define PT_SND_MUSIC                (16)
#define PT_SND_SFX                  (17)
#define PT_SCRIPTS                  (18)
#define PT_VIDEO                    (19)
#define PT_TEXTS                    (20)
#define PT_SAVE                     (21)
#define PT_FONTS                    (22)
#define PT_CACHE                    (23)
	// Server paths
#define PT_SERVER_ROOT              (30)
#define PT_SERVER_DATA              (31)
#define PT_SERVER_TEXTS             (32)
#define PT_SERVER_DIALOGS           (33)
#define PT_SERVER_MAPS              (34)
#define PT_SERVER_PRO_ITEMS         (35)
#define PT_SERVER_PRO_CRITTERS      (36)
#define PT_SERVER_SCRIPTS           (37)
#define PT_SERVER_SAVE              (38)
#define PT_SERVER_CLIENTS           (39)
#define PT_SERVER_BANS              (40)
	// Other
#define PT_MAPPER_ROOT              (45)
#define PT_MAPPER_DATA              (46)

// Internal server commands
#define COMMAND_EXIT                   (1)
#define COMMAND_MYINFO                 (2)
#define COMMAND_GAMEINFO               (3)
#define COMMAND_CRITID                 (4)
#define COMMAND_MOVECRIT               (5)
#define COMMAND_KILLCRIT               (6)
#define COMMAND_DISCONCRIT             (7)
#define COMMAND_TOGLOBAL               (8)
#define COMMAND_RESPAWN                (9)
#define COMMAND_PARAM                  (10)
#define COMMAND_GETACCESS              (11)
#define COMMAND_ADDITEM                (12)
#define COMMAND_CRASH                  (13)
#define COMMAND_ADDITEM_SELF           (14)
#define COMMAND_ADDNPC                 (15)
#define COMMAND_ADDLOCATION            (16)
#define COMMAND_RELOADSCRIPTS          (17)
#define COMMAND_LOADSCRIPT             (18)
#define COMMAND_RELOAD_CLIENT_SCRIPTS  (19)
#define COMMAND_RUNSCRIPT              (20)
#define COMMAND_RELOADLOCATIONS        (21)
#define COMMAND_LOADLOCATION           (22)
#define COMMAND_RELOADMAPS             (23)
#define COMMAND_LOADMAP                (24)
#define COMMAND_REGENMAP               (25)
#define COMMAND_RELOADDIALOGS          (26)
#define COMMAND_LOADDIALOG             (27)
#define COMMAND_RELOADTEXTS            (28)
#define COMMAND_RELOADAI               (29)
#define COMMAND_CHECKVAR               (30)
#define COMMAND_SETVAR                 (31)
#define COMMAND_SETTIME                (32)
#define COMMAND_BAN                    (33)
#define COMMAND_DELETE_ACCOUNT         (34)
#define COMMAND_CHANGE_PASSWORD        (35)
#define COMMAND_DROP_UID               (36)
#define COMMAND_LOG                    (37)

//BookBonus Cracker++

#define BB_RANGED_CRIT					(0) // бонусный шанс на крит дл€ ranged атак (Ћќ, “ќ, Ёќ)
#define BB_MELEE_AND_THROWING_CRIT		(1) // бонусный шанс на крит дл€ melee и метательных атак (’ќ и холодное метательное);
#define BB_MELEE_AND_THROWING_DAMAGE	(2) // бонусный дамаг дл€ melee и метательных атак (’ќ и холодное метательное);
#define BB_ENERGY_DAMAGE				(3) // бонусный дамаг дл€ Ёќ;
#define BB_SMALL_DAMAGE					(4) // бонусный дамаг дл€ Ћќ;
#define BB_BIG_DAMAGE					(5) // бонусный дамаг дл€ “ќ;
#define BB_RANGED_CRIT_ROLL				(6) // бонусный шанс на критролла дл€ ranged атак (Ћќ, “ќ, Ёќ)
#define BB_MELEE_AND_THROWING_CRIT_ROLL	(7) // бонусный шанс на критролла дл€ melee и метательных атак (’ќ и холодное метательное);

// --Cracker

// for WeaponSubtype
#define WS_NONE		(0)
#define WS_UNARMED  (1)
#define WS_MELEE    (2) // No use
#define WS_THROWING (3)
#define WS_GUN      (4)

//TabaK. —лежка.
#define TRACK_RADIUS                (50)     // –адиус обнаружени€

//Cracker. «оны домов.
#define HEX_PID_HOUSE_BEGIN	(7001)
#define HEX_PID_HOUSE_END	(7004)
#define HEX_ZONE_HOUSE_SHOP 		(1)
#define HEX_ZONE_HOUSE_BAR 			(2)
#define HEX_ZONE_HOUSE_BANK 		(3)
#define HEX_ZONE_HOUSE_RESIDENTIAL	(4)
#define HEX_PID_HOUSE_SHOP 			(7001)
#define HEX_PID_HOUSE_BAR 			(7002)
#define HEX_PID_HOUSE_BANK			(7003)
#define HEX_PID_HOUSE_RESIDENTIAL	(7004)

// Weapone_TypeAttack
#define WTA_DEFAULT				( 0 ) // ƒефаултна€ боевка
#define WTA_RADIUS_HEX			( 1 ) // ƒефаултный погекс с радиусом
#define WTA_LINE_IGNORED_RAKED	( 2 ) // Ћини€ с пробоем преп€тствий
#define WTA_LINE_FLAME			( 3 ) // Ћини€ огн€
#define WTA_BURST_REGION			( 4 ) // ќчередь по территории

#ifndef SKIP_PRAGMAS
///
/// Global variables
///
///
/// Extended critter fields and methods
///
namespace City
{
  shared enum Penalty
  {
    Begin,
    PragmaBegin = PENALTY_BEGIN,
    CheckBorderAttacked = 1000,
    CheckBorderNoGuard = 5000,
    CheckBorderKill = 10000,
    CheckBorderAllCityEnemy = 50000,
    CheckBorderHunters = 50000,
	
    StartValue,
    Attacked = 400,
    Kill = 10000,
    Steal = 10,
    Sneak = 150, 
    Explode = 2000,
    ExplodeActivate = 1000,
	Pay = 0,
    CheckPenaltyKarma = 400,
    CheckBorderNoGuardKarma = 50,
    CheckBorderKillKarma = 50,
    NextPenaltyModule = 2,
	MSGNumber = 160000,
	MSGNumberTotalPenalty = 160100,
    End
  }
  
  shared enum PenaltyListing
  {
	None,
	StealNoSuccess,
    Begin = 7,
    Attacked,
    Kill,
    Steal,
    Sneak, 
    Explode,
    ExplodeActivate,
	Pay,
    End
  }
}

#include "pragma.fos"

#endif // SKIP_PRAGMAS
#endif // __DEFINES__
