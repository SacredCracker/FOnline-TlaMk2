#include "_macros.fos"
#include "_colors.fos"
// Эпидемия

#define INFECT_DISTANCE       ( 10 ) // Максимальная дистанция, на которой срабатывает заражение криттеров
#define NPC_REACT_DISTANCE    ( 5 )  // Дистанция, на которой реагируют нпц


#define STAGE_INCUBATION      ( 1 )
#define STAGE_PROGRESS        ( 2 )
#define STAGE_PANG            ( 3 )
#define STAGE_DEAD            ( 4 )

#define VALID_TO_TALK         # (cr) ( cr.Stat[ ST_BODY_TYPE ] == BT_MEN || cr.Stat[ ST_BODY_TYPE ] == BT_WOMEN || cr.Stat[ ST_BODY_TYPE ] == BT_CHILDREN || cr.Stat[ ST_BODY_TYPE ] == BT_SUPER_MUTANT || cr.Stat[ ST_BODY_TYPE ] == BT_GHOUL )

import void FlushScreen( Critter& cr, bool fadeOut, uint timeMs ) from "effects";
import void InjureCritter( Critter& cr, uint dmg, uint dmgType, uint8 dir, uint attackerId ) from "combat";
import void AffectPoison( Critter& cr, int value ) from "Mk2";
import bool AddAttackPlane( Critter& npc, uint priority, Critter& target ) from "npc_planes";

string[] msg1 = { "Эй! Тебе что, плохо? Это рыбий грипп?", "Кашляй в другую сторону.", "А ну, вали отсюда, пока все не заразились?", "Проваливай от меня с этой дрянью!", "Ааааа!! Еще один ходячий труп!", "Надеюсь, это всего лишь обычная простуда??!", "Уходи, если хочешь жить!", "Рыбий грипп!!!!", "Ох! Рыбий грипп!", "Эпидемия добралась и до нас!!!", "Эта дрянь передается по воздуху!", "Инфекция передается воздушным путем!", "Проклятье!", "Уходи отсюда. Мы не хотим умирать!", "Только не я!", "Ох, надо двигать отсюда. Эпидемия уже здесь.", "Все. Всем хана. Сначала кашель, потом не хватает воздуха, потом отбрасывают коньки.", "НЕТ! ТОЛЬКО НЕ ЗДЕСЬ!" };
#define RND1                  ( msg1[ Random( 0, msg1.length() - 1 ) ] )

void PandemicItem( Critter& cr, int, int, int )
{
    Map@map = cr.GetMap();
    if( valid( map ) )
    {
        Item@ item = map.AddItem( cr.HexX, cr.HexY, PID_ADVANCED_POWER_ARMOR, 1 );
        if( valid( item ) )
        {
            item.SetScript( "_PandemicBox" );
            item.LightIntensity = Random( 80, 180 );
            item.LightColor = COLOR_BLUE;
            item.LightDistance = 20;
            item.LightFlags = 0;
            SETFLAG( item.Flags, ITEM_LIGHT );
            SETFLAG( item.Flags, ITEM_COLORIZE );
            item.Update();
        }
    }
}


void _PandemicBox( Item& item, bool firstTime )
{
    item.SetEvent( ITEM_EVENT_SKILL, "_PandemicBoxSkill" );
}


bool _PandemicBoxSkill( Item& item, Critter& cr, int skill )
{
    if( skill == SKILL_PICK_ON_GROUND )
    {
        InfectCritter( cr );
    }
    return false;
}

void InfectCritter( Critter@ cr )
{
    // return;
    // GameVar@ isInfected = GetLocalVar(PANDEMIC_VAR, cr.Id);
    // if(valid(isInfected) && isInfected == 0)


    if( not valid( cr ) )
        return;
    if( cr.Stat[ ST_VAR9 ] == 0 )
    {
        // isInfected = 1;
        cr.StatBase[ ST_VAR9 ]  = STAGE_INCUBATION;
        cr.Wait( 0 );
        if( cr.IsPlayer() )
        {
            // cr.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, STR_INFECTED);
            cr.Say( SAY_NETMSG, "У вас неожиданно темнеет в глазах, резко учащается пульс и на лбу выступает испарина. Что-то не так с этой броней!" );
            FlushScreen( cr, true, 1000 );
        }
        // cr.SayMsg(SAY_NETMSG, TEXTMSG_TEXT, STR_SOMEBODY_INFECTED);
        cr.Say( SAY_EMOTE, "Дергается и заходится в неистовом кашле." );
        cr.AddTimeEvent( "cte_InfectOthers", REAL_MINUTE( Random( 5, 6 ) ), 0 );
        cr.AddTimeEvent( "cte_Cough", REAL_SECOND( Random( 10, 30 ) ), 0 );
        cr.AddTimeEvent( "cte_PandemiaStage1", REAL_MINUTE( Random( 10, 15 ) ), 0 );
    }

}

uint cte_InfectOthers( Critter& cr, int identifier, uint& rate )
{
    if( cr.Stat[ ST_VAR9 ] == 0 )
        return 0;
    if( cr.Stat[ ST_VAR9 ] == STAGE_DEAD && cr.IsLife() )
        return 0;
    Map@ map = cr.GetMap();
    if( valid( map ) )
    {
        Critter@[] critters;
        if( map.GetCrittersHex( cr.HexX, cr.HexY, INFECT_DISTANCE, FIND_LIFE | FIND_ALL, critters ) > 0 )
        {
            InfectCritter( critters[ Random( 0, critters.length() - 1 ) ] );
            if( cr.Stat[ ST_VAR9 ] > 1 )
                InfectCritter( critters[ Random( 0, critters.length() - 1 ) ] );
            if( cr.Stat[ ST_VAR9 ] > 2 )
                InfectCritter( critters[ Random( 0, critters.length() - 1 ) ] );
        }
    }
    return REAL_SECOND( Random( 20, 30 ) );
}

uint cte_Cough( Critter& cr, int identifier, uint& rate )
{
    if( cr.Stat[ ST_VAR9 ] == 0 )
        return 0;
    Critter@ crit;
    if( cr.IsDead() && cr.Stat[ ST_VAR9 ] > 0 && cr.Stat[ ST_VAR9 ] < STAGE_DEAD )
    {
        cr.StatBase[ ST_VAR9 ] = STAGE_DEAD;
        return REAL_SECOND( Random( 10, 30 ) );
    }
    if( cr.IsLife() && cr.Stat[ ST_VAR9 ] == STAGE_DEAD )
    {
        cr.StatBase[ ST_VAR9 ] = 0;
        return 0;
    }
    Map@ map = cr.GetMap();
    switch( cr.Stat[ ST_VAR9 ] )
    {
    case STAGE_INCUBATION:
        cr.Say( SAY_EMOTE_ON_HEAD, ( Random( 0, 1 ) == 1 ? "Кашляет" : "Громко кашляет" ) );
        if( valid( map ) )
        {
            Critter@[] critters;
            if( map.GetCrittersHex( cr.HexX, cr.HexY, NPC_REACT_DISTANCE, FIND_LIFE | FIND_ONLY_NPC, critters ) > 0 )
            {
                @crit = critters[ Random( 0, critters.length() - 1 ) ];
                if( valid( crit ) && VALID_TO_TALK( crit ) )
                {
                    crit.Say( SAY_NORM_ON_HEAD, RND1 );
                }
            }
        }
        break;
    case STAGE_PANG:
        if( cr.IsPlayer() )
        {
            cr.Say( SAY_NETMSG, "Вы кашляете кровью. Вы испытываете приступ сильной боли в груди." );
        }

        InjureCritter( cr,  CLAMP( Random( 1, int(cr.Stat[ ST_MAX_LIFE ] / 5) ), 3, 1000 ), DAMAGE_UNCALLED, 0, 0 );
        AffectPoison( cr, Random( 1, 75 ) );
        if( valid( map ) )
        {
            Critter@[] critters;
            if( map.GetCrittersHex( cr.HexX, cr.HexY, INFECT_DISTANCE, FIND_LIFE | FIND_ONLY_NPC, critters ) > 0 )
            {
                @crit = critters[ Random( 0, critters.length() - 1 ) ];
                if( valid( crit ) && VALID_TO_TALK( crit ) && crit.Id != cr.Id )
                {
                    string[] msg2 = { "Здесь еще один зараженный!", "Эпидемия!", "Разносчик заразы здесь!", "Поможем больному справиться с заразой.", "Все сюда, здесь гриппозный!", "Рыбий грипп! О боже", "Дезинфекция" };
                    crit.Say( SAY_SHOUT, msg2[ Random( 0, msg2.length() - 1 ) ] );
                }
                for( uint i = 0, l = critters.length(); i < l; i++ )
                {
                    @crit = critters[ i ];
                    if( valid( crit ) && crit.Id != cr.Id )
                    {
                        if( Random( 1, 2 ) == 1 )
                        {
                            AddAttackPlane( crit, 100, cr );
                            if( Random( 1, 4 ) == 1 )
                                crit.Say( SAY_NORM_ON_HEAD, "Доктор идет." );
                        }
                    }
                }
            }
        }
        return REAL_SECOND( Random( 12, 25 ) );
    case STAGE_PROGRESS:
        if( Random( 1, 3 ) == 1 )
        {
            if( valid( map ) )
            {
                if( cr.IsPlayer() )
                {
                    cr.Wait( 0 );
                    cr.Say( SAY_NETMSG, "У вас отнимаются ноги. Вы теряете сознание." );
                    cr.StatBase[ ST_CURRENT_AP ] = -cr.Stat[ ST_ACTION_POINTS ] * 500;
                    cr.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 0, cr.HexX, cr.HexY );
                    FlushScreen( cr, true, 3000 );
                }
                cr.Say( SAY_EMOTE_ON_HEAD, "Валится без сознания" );
            }
        }
        return REAL_SECOND( Random( 12, 80 ) );
    default:
        break;
    }
    return REAL_SECOND( Random( 20, 40 ) );
}

uint cte_PandemiaStage1( Critter& cr, int identifier, uint& rate )
{
    if( cr.Stat[ ST_VAR9 ] == 0 )
        return 0;
    cr.Wait( 0 );
    if( cr.IsPlayer() )
    {
        cr.Say( SAY_NETMSG, "Вы чувствуете, что вам стало гораздо хуже. Подскочила температура, ноги стали словно ватные. Становится тяжело дышать." );
    }

    cr.Say( SAY_EMOTE, "Оступается. Сгибается, словно от сильной боли в груди" );
    cr.StatBase[ ST_VAR9 ] = STAGE_PROGRESS;
    cr.AddTimeEvent( "cte_PandemiaStage2", REAL_MINUTE( Random( 5, 10 ) ), 0 );
    return 0;
}


uint cte_PandemiaStage2( Critter& cr, int identifier, uint& rate )
{
    if( cr.Stat[ ST_VAR9 ] == 0 )
        return 0;
    cr.Wait( 0 );
    if( cr.IsPlayer() )
    {
        cr.Say( SAY_NETMSG, "Вы чувствуете, что вам стало гораздо хуже. Легкие словно в огне. Сердце стучит как пулемет. Каждый вздох дается с трудом" );
    }

    cr.Say( SAY_EMOTE, "Кашляет кровью" );
    cr.StatBase[ ST_VAR9 ] = STAGE_PANG;
    return 0;
}
