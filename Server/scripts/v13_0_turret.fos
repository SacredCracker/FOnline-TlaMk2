// Name: v13_0_turret
// Author: Sufir
// Edited by:

// Uses
#include "_macros.fos"
#include "v13_0_guard_h.fos"
import bool AddAttackPlane( Critter& npc, uint priority, uint critId, int minHp ) from "npc_planes";
import bool AddAttackPlane( Critter& npc, uint priority, uint critId ) from "npc_planes";
import uint EraseAttackPlane( Critter& npc, uint critId ) from "npc_planes";

// Defines


void _TurretInit( Critter& turret, bool firstTime )
{

    turret.ModeBase[ MODE_NO_SUPPLY ] = 1;
    turret.SetEvent( CRITTER_EVENT_MESSAGE,                  "_TurretGetMessage" );
    turret.SetEvent( CRITTER_EVENT_ATTACKED,         "_FriendlyFire" );
    turret.SetEvent( CRITTER_EVENT_ATTACK,                   "_FriendlyFire" );

}


void _TurretGetMessage( Critter& turret, Critter& fromCr, int message, int value )
{

    if( !turret.IsLife() )
        return;
    if( message == MSG_V13_GUARD_ALARM )
    {
        Critter@ player = GetCritter( value );
        if( !valid( player ) )
            return;
        if( player.IsNpc() )
            return;
        AddAttackPlane( turret, 0, player.Id, int( player.StatBase[ ST_CHARISMA ] * 1.5 ) );
        // turret.AddEnemyInStack(player.Id);
    }
    else if( message == MSG_V13_GUARD_KILL )
    {
        Critter@ player = GetCritter( value );
        if( !valid( player ) )
            return;
        if( player.IsNpc() )
            return;
        AddAttackPlane( turret, 0, player.Id );
    }
    return;

}


// ≈сли NPC атакован одним из "своих" - не атакуем его.
bool _FriendlyFire( Critter& guardian, Critter& attacker )
{

    if( guardian.IsNpc() && attacker.IsNpc() )
    {
        if( guardian.StatBase[ ST_NPC_ROLE ] == ROLE_GUARDIAN || guardian.StatBase[ ST_NPC_ROLE ] == ROLE_SOLDIER )
        {
            guardian.Wait( 5000 );
            attacker.Wait( 5000 );
            if( guardian.CheckEnemyInStack( attacker.Id ) )
                guardian.EraseEnemyFromStack( attacker.Id );
            if( attacker.CheckEnemyInStack( guardian.Id ) )
                attacker.EraseEnemyFromStack( guardian.Id );
            EraseAttackPlane( attacker, guardian.Id );
            EraseAttackPlane( guardian, attacker.Id );
            return true;
        }
    }
    return false;

}
