/* Автор: Cracker, Tabak
   Данный скрипт написан для тесла оружия и брони.*/

#include "_macros.fos"
import void InjureCritter( Critter& cr, uint dmg, uint dmgType, uint8 dir, uint attackerId ) from "combat";
import void critter_attack( Critter& cr, Critter& target ) from "main";

void lightning_attack( Critter& attacker, Critter& target, ProtoItem& weapon, uint8 weaponMode )
{
    Map@ map = attacker.GetMap();
    if( !valid( map ) )
        return;
    Critter@[] critters;
    uint Damag,
         atId = attacker.Id;

    Critter@ crit = null;

    uint16   len, hexX, hexY, crHexX, crHexY,
             tHexX = target.HexX,
             tHexY = target.HexY;

    bool isFull = false;

    for( uint icritter = 0, iMax = map.GetCrittersHex( tHexX, tHexY, weapon.Weapon_LightningRadius, FIND_LIFE_AND_KO, critters );
         icritter < iMax && icritter < weapon.Weapon_LightningCountTarget; icritter++ )
        if( !critters[ icritter ].IsDead() )
        {
            @crit = critters[ icritter ];
            crHexX = crit.HexX;
            crHexY = crit.HexY;
            len = GetDistantion( tHexX, tHexY, crHexX, crHexY );
            isFull = false;
            for( uint i = 0; i < len; i++ )
            {
                hexX = tHexX;
                hexY = tHexY;
                map.MoveHexByDir( hexX, hexY, GetDirection( tHexX, tHexY, crHexX, crHexY ), i + 1 );
                if( not map.IsHexRaked( hexX, hexY ) )
                {
                    isFull = true;
                    break;
                }
                map.RunEffect( PID_EXPLODE_EMP, hexX, hexY, 0, EFFECT_INSTRUCTION_NONE );
            }
            if( isFull )
                continue;
            map.RunFlyEffect( PID_EXPLODE_EMP, target, crit, tHexX, tHexX, crHexX, crHexY, EFFECT_INSTRUCTION_NONE );

            Damag = ( Random( ( _WeaponDmgMin( weapon, weaponMode ) ), ( _WeaponDmgMax( weapon, weaponMode ) ) ) ) +
                    ( attacker.PerkBase[ PE_LIVING_ANATOMY ] * 15 ) + ( attacker.PerkBase[ PE_BONUS_RANGED_DAMAGE ] * 2 ); // Высчитываем дэмаг для каждого отдельно.

            critter_attack( attacker, crit );
            crit.EventAttacked( attacker );
            attacker.EventAttack( crit );
            InjureCritter( crit, Damag, ( _WeaponDmgType( weapon, weaponMode ) ), crit.Dir, atId );     // Наносим урон.
        }
}

void lightning_attack_armor( Critter& attacker, Item& armor )
{
    Map@ map = attacker.GetMap();
    if( !valid( map ) )
        return;
    if( attacker.IsFree() )
        attacker.Wait( 500 );
    else
        return;
    if( attacker.Stat[ ST_CURRENT_AP ] < 2 )
    {
        attacker.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 14200 );
        return;
    }
    attacker.StatBase[ ST_CURRENT_AP ] -= 200;
    Critter@[] critters;
    Critter@ crit = null;
    uint     DefDamag = ( armor.Charge ) * 2,
             atId = attacker.Id;

    uint16 len = 0,
           atHexX = attacker.HexX,
           atHexY = attacker.HexY,
           hexX = 0,
           hexY = 0;

    bool isFull = false;

    for( uint icritter = 0, iMax = map.GetCrittersHex( atHexX, atHexY, 10, FIND_LIFE_AND_KO, critters ); icritter < iMax && icritter < 5; icritter++ )
        if( !critters[ icritter ].IsDead() )
        {
            @ crit = critters[ icritter ];
            Item@[] arrTesla;
            if( crit.GetItems( SLOT_ARMOR, arrTesla ) > 0 && arrTesla[ 0 ].GetProtoId() == PID_TESLA_ARMOR )
                continue;
            len = GetDistantion( atHexX, atHexY, crit.HexX, crit.HexY );
            for( uint i = 0; i < len; i++ )
            {
                hexX = atHexX;
                hexY = atHexY;
                map.MoveHexByDir( hexX, hexY, GetDirection( atHexX, atHexY, crit.HexX, crit.HexY ), i + 1 );
                if( not map.IsHexRaked( hexX, hexY ) )
                {
                    isFull = true;
                    break;
                }
                map.RunEffect( PID_EXPLODE_EMP, hexX, hexY, 0, EFFECT_INSTRUCTION_NONE );
            }
            if( isFull )
                continue;
            map.RunFlyEffect( PID_EXPLODE_EMP, attacker, crit, atHexX, atHexY, crit.HexX, crit.HexY, EFFECT_INSTRUCTION_NONE );

            if( crit.Id != atId )
            {
                critter_attack( attacker, crit );
                crit.EventAttacked( attacker );
                attacker.EventAttack( crit );
                InjureCritter( crit, DefDamag, DAMAGE_ELECTR, crit.Dir, atId );               // Наносим урон.
            }
        }
    armor.Charge = 0;
    armor.Update();
}

// Разряд Теслы. Значение заряда хранится в поле Charge
void unsafe_Tesla_Discharge( Critter& player, int, int, int, string@, int[] @ )
{
    Item@[] arrTesla;
    if( player.GetItems( SLOT_ARMOR, arrTesla ) > 0 )
    {
        if( player.IsDead() )
        {
            player.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 14201 );
            return;
        }
        Item@ tesla = arrTesla[ 0 ];
        if( validEngineObject( tesla ) )
        {
            if( tesla.Charge > 0 )
                lightning_attack_armor( player, tesla );
            else
                player.SayMsg( SAY_NETMSG, TEXTMSG_GAME, 14202 );
        }
    }
}
